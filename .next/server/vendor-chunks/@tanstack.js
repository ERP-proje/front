"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tanstack";
exports.ids = ["vendor-chunks/@tanstack"];
exports.modules = {

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/focusManager.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusManager: () => (/* binding */ FocusManager),\n/* harmony export */   focusManager: () => (/* binding */ focusManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/focusManager.ts\n\n\nvar FocusManager = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = onFocus => {\n      if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(focused => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach(listener => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL2ZvY3VzTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDaUQ7QUFDWDtBQUN0QyxJQUFJRSxZQUFZLEdBQUcsY0FBY0YsMERBQVksQ0FBQztFQUM1QyxDQUFDRyxPQUFPO0VBQ1IsQ0FBQ0MsT0FBTztFQUNSLENBQUNDLEtBQUs7RUFDTkMsV0FBV0EsQ0FBQSxFQUFHO0lBQ1osS0FBSyxDQUFDLENBQUM7SUFDUCxJQUFJLENBQUMsQ0FBQ0QsS0FBSyxHQUFJRSxPQUFPLElBQUs7TUFDekIsSUFBSSxDQUFDTiwrQ0FBUSxJQUFJTyxNQUFNLENBQUNDLGdCQUFnQixFQUFFO1FBQ3hDLE1BQU1DLFFBQVEsR0FBR0EsQ0FBQSxLQUFNSCxPQUFPLENBQUMsQ0FBQztRQUNoQ0MsTUFBTSxDQUFDQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRUMsUUFBUSxFQUFFLEtBQUssQ0FBQztRQUM1RCxPQUFPLE1BQU07VUFDWEYsTUFBTSxDQUFDRyxtQkFBbUIsQ0FBQyxrQkFBa0IsRUFBRUQsUUFBUSxDQUFDO1FBQzFELENBQUM7TUFDSDtNQUNBO0lBQ0YsQ0FBQztFQUNIO0VBQ0FFLFdBQVdBLENBQUEsRUFBRztJQUNaLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQ1IsT0FBTyxFQUFFO01BQ2xCLElBQUksQ0FBQ1MsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUNSLEtBQUssQ0FBQztJQUNwQztFQUNGO0VBQ0FTLGFBQWFBLENBQUEsRUFBRztJQUNkLElBQUksQ0FBQyxJQUFJLENBQUNDLFlBQVksQ0FBQyxDQUFDLEVBQUU7TUFDeEIsSUFBSSxDQUFDLENBQUNYLE9BQU8sR0FBRyxDQUFDO01BQ2pCLElBQUksQ0FBQyxDQUFDQSxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBQ3hCO0VBQ0Y7RUFDQVMsZ0JBQWdCQSxDQUFDUixLQUFLLEVBQUU7SUFDdEIsSUFBSSxDQUFDLENBQUNBLEtBQUssR0FBR0EsS0FBSztJQUNuQixJQUFJLENBQUMsQ0FBQ0QsT0FBTyxHQUFHLENBQUM7SUFDakIsSUFBSSxDQUFDLENBQUNBLE9BQU8sR0FBR0MsS0FBSyxDQUFFRixPQUFPLElBQUs7TUFDakMsSUFBSSxPQUFPQSxPQUFPLEtBQUssU0FBUyxFQUFFO1FBQ2hDLElBQUksQ0FBQ2EsVUFBVSxDQUFDYixPQUFPLENBQUM7TUFDMUIsQ0FBQyxNQUFNO1FBQ0wsSUFBSSxDQUFDSSxPQUFPLENBQUMsQ0FBQztNQUNoQjtJQUNGLENBQUMsQ0FBQztFQUNKO0VBQ0FTLFVBQVVBLENBQUNiLE9BQU8sRUFBRTtJQUNsQixNQUFNYyxPQUFPLEdBQUcsSUFBSSxDQUFDLENBQUNkLE9BQU8sS0FBS0EsT0FBTztJQUN6QyxJQUFJYyxPQUFPLEVBQUU7TUFDWCxJQUFJLENBQUMsQ0FBQ2QsT0FBTyxHQUFHQSxPQUFPO01BQ3ZCLElBQUksQ0FBQ0ksT0FBTyxDQUFDLENBQUM7SUFDaEI7RUFDRjtFQUNBQSxPQUFPQSxDQUFBLEVBQUc7SUFDUixNQUFNVyxTQUFTLEdBQUcsSUFBSSxDQUFDQSxTQUFTLENBQUMsQ0FBQztJQUNsQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0MsT0FBTyxDQUFFVixRQUFRLElBQUs7TUFDbkNBLFFBQVEsQ0FBQ1EsU0FBUyxDQUFDO0lBQ3JCLENBQUMsQ0FBQztFQUNKO0VBQ0FBLFNBQVNBLENBQUEsRUFBRztJQUNWLElBQUksT0FBTyxJQUFJLENBQUMsQ0FBQ2YsT0FBTyxLQUFLLFNBQVMsRUFBRTtNQUN0QyxPQUFPLElBQUksQ0FBQyxDQUFDQSxPQUFPO0lBQ3RCO0lBQ0EsT0FBT2tCLFVBQVUsQ0FBQ0MsUUFBUSxFQUFFQyxlQUFlLEtBQUssUUFBUTtFQUMxRDtBQUNGLENBQUM7QUFDRCxJQUFJQyxZQUFZLEdBQUcsSUFBSXRCLFlBQVksQ0FBQyxDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvamludGFlay9Eb2N1bWVudHMvcHJvamVjdC9lcnAvZnJvbnQvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9mb2N1c01hbmFnZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2ZvY3VzTWFuYWdlci50c1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSBcIi4vc3Vic2NyaWJhYmxlLmpzXCI7XG5pbXBvcnQgeyBpc1NlcnZlciB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG52YXIgRm9jdXNNYW5hZ2VyID0gY2xhc3MgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICAjZm9jdXNlZDtcbiAgI2NsZWFudXA7XG4gICNzZXR1cDtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLiNzZXR1cCA9IChvbkZvY3VzKSA9PiB7XG4gICAgICBpZiAoIWlzU2VydmVyICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIGNvbnN0IGxpc3RlbmVyID0gKCkgPT4gb25Gb2N1cygpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIiwgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIiwgbGlzdGVuZXIpO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH07XG4gIH1cbiAgb25TdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLiNjbGVhbnVwKSB7XG4gICAgICB0aGlzLnNldEV2ZW50TGlzdGVuZXIodGhpcy4jc2V0dXApO1xuICAgIH1cbiAgfVxuICBvblVuc3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5oYXNMaXN0ZW5lcnMoKSkge1xuICAgICAgdGhpcy4jY2xlYW51cD8uKCk7XG4gICAgICB0aGlzLiNjbGVhbnVwID0gdm9pZCAwO1xuICAgIH1cbiAgfVxuICBzZXRFdmVudExpc3RlbmVyKHNldHVwKSB7XG4gICAgdGhpcy4jc2V0dXAgPSBzZXR1cDtcbiAgICB0aGlzLiNjbGVhbnVwPy4oKTtcbiAgICB0aGlzLiNjbGVhbnVwID0gc2V0dXAoKGZvY3VzZWQpID0+IHtcbiAgICAgIGlmICh0eXBlb2YgZm9jdXNlZCA9PT0gXCJib29sZWFuXCIpIHtcbiAgICAgICAgdGhpcy5zZXRGb2N1c2VkKGZvY3VzZWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vbkZvY3VzKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgc2V0Rm9jdXNlZChmb2N1c2VkKSB7XG4gICAgY29uc3QgY2hhbmdlZCA9IHRoaXMuI2ZvY3VzZWQgIT09IGZvY3VzZWQ7XG4gICAgaWYgKGNoYW5nZWQpIHtcbiAgICAgIHRoaXMuI2ZvY3VzZWQgPSBmb2N1c2VkO1xuICAgICAgdGhpcy5vbkZvY3VzKCk7XG4gICAgfVxuICB9XG4gIG9uRm9jdXMoKSB7XG4gICAgY29uc3QgaXNGb2N1c2VkID0gdGhpcy5pc0ZvY3VzZWQoKTtcbiAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xuICAgICAgbGlzdGVuZXIoaXNGb2N1c2VkKTtcbiAgICB9KTtcbiAgfVxuICBpc0ZvY3VzZWQoKSB7XG4gICAgaWYgKHR5cGVvZiB0aGlzLiNmb2N1c2VkID09PSBcImJvb2xlYW5cIikge1xuICAgICAgcmV0dXJuIHRoaXMuI2ZvY3VzZWQ7XG4gICAgfVxuICAgIHJldHVybiBnbG9iYWxUaGlzLmRvY3VtZW50Py52aXNpYmlsaXR5U3RhdGUgIT09IFwiaGlkZGVuXCI7XG4gIH1cbn07XG52YXIgZm9jdXNNYW5hZ2VyID0gbmV3IEZvY3VzTWFuYWdlcigpO1xuZXhwb3J0IHtcbiAgRm9jdXNNYW5hZ2VyLFxuICBmb2N1c01hbmFnZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb2N1c01hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbIlN1YnNjcmliYWJsZSIsImlzU2VydmVyIiwiRm9jdXNNYW5hZ2VyIiwiZm9jdXNlZCIsImNsZWFudXAiLCJzZXR1cCIsImNvbnN0cnVjdG9yIiwib25Gb2N1cyIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJsaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJvblN1YnNjcmliZSIsInNldEV2ZW50TGlzdGVuZXIiLCJvblVuc3Vic2NyaWJlIiwiaGFzTGlzdGVuZXJzIiwic2V0Rm9jdXNlZCIsImNoYW5nZWQiLCJpc0ZvY3VzZWQiLCJsaXN0ZW5lcnMiLCJmb3JFYWNoIiwiZ2xvYmFsVGhpcyIsImRvY3VtZW50IiwidmlzaWJpbGl0eVN0YXRlIiwiZm9jdXNNYW5hZ2VyIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasNextPage: () => (/* binding */ hasNextPage),\n/* harmony export */   hasPreviousPage: () => (/* binding */ hasPreviousPage),\n/* harmony export */   infiniteQueryBehavior: () => (/* binding */ infiniteQueryBehavior)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/infiniteQueryBehavior.ts\n\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = {\n        pages: [],\n        pageParams: []\n      };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = object => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureQueryFn)(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            client: context.client,\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(queryFnContext);\n          const {\n            maxPages\n          } = context.options;\n          const addTo = previous ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToStart : _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(fetchFn, {\n            client: context.client,\n            queryKey: context.queryKey,\n            meta: context.options.meta,\n            signal: context.signal\n          }, query);\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, {\n  pages,\n  pageParams\n}) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(pages[lastIndex], pages, pageParams[lastIndex], pageParams) : void 0;\n}\nfunction getPreviousPageParam(options, {\n  pages,\n  pageParams\n}) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InfiniteQueryObserver: () => (/* binding */ InfiniteQueryObserver)\n/* harmony export */ });\n/* harmony import */ var _queryObserver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryObserver.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/queryObserver.js\");\n/* harmony import */ var _infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./infiniteQueryBehavior.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// src/infiniteQueryObserver.ts\n\n\nvar InfiniteQueryObserver = class extends _queryObserver_js__WEBPACK_IMPORTED_MODULE_0__.QueryObserver {\n  constructor(client, options) {\n    super(client, options);\n  }\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n  setOptions(options, notifyOptions) {\n    super.setOptions(_objectSpread(_objectSpread({}, options), {}, {\n      behavior: (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_1__.infiniteQueryBehavior)()\n    }), notifyOptions);\n  }\n  getOptimisticResult(options) {\n    options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_1__.infiniteQueryBehavior)();\n    return super.getOptimisticResult(options);\n  }\n  fetchNextPage(options) {\n    return this.fetch(_objectSpread(_objectSpread({}, options), {}, {\n      meta: {\n        fetchMore: {\n          direction: \"forward\"\n        }\n      }\n    }));\n  }\n  fetchPreviousPage(options) {\n    return this.fetch(_objectSpread(_objectSpread({}, options), {}, {\n      meta: {\n        fetchMore: {\n          direction: \"backward\"\n        }\n      }\n    }));\n  }\n  createResult(query, options) {\n    const {\n      state\n    } = query;\n    const parentResult = super.createResult(query, options);\n    const {\n      isFetching,\n      isRefetching,\n      isError,\n      isRefetchError\n    } = parentResult;\n    const fetchDirection = state.fetchMeta?.fetchMore?.direction;\n    const isFetchNextPageError = isError && fetchDirection === \"forward\";\n    const isFetchingNextPage = isFetching && fetchDirection === \"forward\";\n    const isFetchPreviousPageError = isError && fetchDirection === \"backward\";\n    const isFetchingPreviousPage = isFetching && fetchDirection === \"backward\";\n    const result = _objectSpread(_objectSpread({}, parentResult), {}, {\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_1__.hasNextPage)(options, state.data),\n      hasPreviousPage: (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_1__.hasPreviousPage)(options, state.data),\n      isFetchNextPageError,\n      isFetchingNextPage,\n      isFetchPreviousPageError,\n      isFetchingPreviousPage,\n      isRefetchError: isRefetchError && !isFetchNextPageError && !isFetchPreviousPageError,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    });\n    return result;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL2luZmluaXRlUXVlcnlPYnNlcnZlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ21EO0FBS2Y7QUFDcEMsSUFBSUkscUJBQXFCLEdBQUcsY0FBY0osNERBQWEsQ0FBQztFQUN0REssV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFQyxPQUFPLEVBQUU7SUFDM0IsS0FBSyxDQUFDRCxNQUFNLEVBQUVDLE9BQU8sQ0FBQztFQUN4QjtFQUNBQyxXQUFXQSxDQUFBLEVBQUc7SUFDWixLQUFLLENBQUNBLFdBQVcsQ0FBQyxDQUFDO0lBQ25CLElBQUksQ0FBQ0MsYUFBYSxHQUFHLElBQUksQ0FBQ0EsYUFBYSxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ2xELElBQUksQ0FBQ0MsaUJBQWlCLEdBQUcsSUFBSSxDQUFDQSxpQkFBaUIsQ0FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQztFQUM1RDtFQUNBRSxVQUFVQSxDQUFDTCxPQUFPLEVBQUVNLGFBQWEsRUFBRTtJQUNqQyxLQUFLLENBQUNELFVBQVUsQ0FBQUUsYUFBQSxDQUFBQSxhQUFBLEtBRVRQLE9BQU87TUFDVlEsUUFBUSxFQUFFWixnRkFBcUIsQ0FBQztJQUFDLElBRW5DVSxhQUNGLENBQUM7RUFDSDtFQUNBRyxtQkFBbUJBLENBQUNULE9BQU8sRUFBRTtJQUMzQkEsT0FBTyxDQUFDUSxRQUFRLEdBQUdaLGdGQUFxQixDQUFDLENBQUM7SUFDMUMsT0FBTyxLQUFLLENBQUNhLG1CQUFtQixDQUFDVCxPQUFPLENBQUM7RUFDM0M7RUFDQUUsYUFBYUEsQ0FBQ0YsT0FBTyxFQUFFO0lBQ3JCLE9BQU8sSUFBSSxDQUFDVSxLQUFLLENBQUFILGFBQUEsQ0FBQUEsYUFBQSxLQUNaUCxPQUFPO01BQ1ZXLElBQUksRUFBRTtRQUNKQyxTQUFTLEVBQUU7VUFBRUMsU0FBUyxFQUFFO1FBQVU7TUFDcEM7SUFBQyxFQUNGLENBQUM7RUFDSjtFQUNBVCxpQkFBaUJBLENBQUNKLE9BQU8sRUFBRTtJQUN6QixPQUFPLElBQUksQ0FBQ1UsS0FBSyxDQUFBSCxhQUFBLENBQUFBLGFBQUEsS0FDWlAsT0FBTztNQUNWVyxJQUFJLEVBQUU7UUFDSkMsU0FBUyxFQUFFO1VBQUVDLFNBQVMsRUFBRTtRQUFXO01BQ3JDO0lBQUMsRUFDRixDQUFDO0VBQ0o7RUFDQUMsWUFBWUEsQ0FBQ0MsS0FBSyxFQUFFZixPQUFPLEVBQUU7SUFDM0IsTUFBTTtNQUFFZ0I7SUFBTSxDQUFDLEdBQUdELEtBQUs7SUFDdkIsTUFBTUUsWUFBWSxHQUFHLEtBQUssQ0FBQ0gsWUFBWSxDQUFDQyxLQUFLLEVBQUVmLE9BQU8sQ0FBQztJQUN2RCxNQUFNO01BQUVrQixVQUFVO01BQUVDLFlBQVk7TUFBRUMsT0FBTztNQUFFQztJQUFlLENBQUMsR0FBR0osWUFBWTtJQUMxRSxNQUFNSyxjQUFjLEdBQUdOLEtBQUssQ0FBQ08sU0FBUyxFQUFFWCxTQUFTLEVBQUVDLFNBQVM7SUFDNUQsTUFBTVcsb0JBQW9CLEdBQUdKLE9BQU8sSUFBSUUsY0FBYyxLQUFLLFNBQVM7SUFDcEUsTUFBTUcsa0JBQWtCLEdBQUdQLFVBQVUsSUFBSUksY0FBYyxLQUFLLFNBQVM7SUFDckUsTUFBTUksd0JBQXdCLEdBQUdOLE9BQU8sSUFBSUUsY0FBYyxLQUFLLFVBQVU7SUFDekUsTUFBTUssc0JBQXNCLEdBQUdULFVBQVUsSUFBSUksY0FBYyxLQUFLLFVBQVU7SUFDMUUsTUFBTU0sTUFBTSxHQUFBckIsYUFBQSxDQUFBQSxhQUFBLEtBQ1BVLFlBQVk7TUFDZmYsYUFBYSxFQUFFLElBQUksQ0FBQ0EsYUFBYTtNQUNqQ0UsaUJBQWlCLEVBQUUsSUFBSSxDQUFDQSxpQkFBaUI7TUFDekNWLFdBQVcsRUFBRUEsc0VBQVcsQ0FBQ00sT0FBTyxFQUFFZ0IsS0FBSyxDQUFDYSxJQUFJLENBQUM7TUFDN0NsQyxlQUFlLEVBQUVBLDBFQUFlLENBQUNLLE9BQU8sRUFBRWdCLEtBQUssQ0FBQ2EsSUFBSSxDQUFDO01BQ3JETCxvQkFBb0I7TUFDcEJDLGtCQUFrQjtNQUNsQkMsd0JBQXdCO01BQ3hCQyxzQkFBc0I7TUFDdEJOLGNBQWMsRUFBRUEsY0FBYyxJQUFJLENBQUNHLG9CQUFvQixJQUFJLENBQUNFLHdCQUF3QjtNQUNwRlAsWUFBWSxFQUFFQSxZQUFZLElBQUksQ0FBQ00sa0JBQWtCLElBQUksQ0FBQ0U7SUFBc0IsRUFDN0U7SUFDRCxPQUFPQyxNQUFNO0VBQ2Y7QUFDRixDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvamludGFlay9Eb2N1bWVudHMvcHJvamVjdC9lcnAvZnJvbnQvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9pbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2luZmluaXRlUXVlcnlPYnNlcnZlci50c1xuaW1wb3J0IHsgUXVlcnlPYnNlcnZlciB9IGZyb20gXCIuL3F1ZXJ5T2JzZXJ2ZXIuanNcIjtcbmltcG9ydCB7XG4gIGhhc05leHRQYWdlLFxuICBoYXNQcmV2aW91c1BhZ2UsXG4gIGluZmluaXRlUXVlcnlCZWhhdmlvclxufSBmcm9tIFwiLi9pbmZpbml0ZVF1ZXJ5QmVoYXZpb3IuanNcIjtcbnZhciBJbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIgPSBjbGFzcyBleHRlbmRzIFF1ZXJ5T2JzZXJ2ZXIge1xuICBjb25zdHJ1Y3RvcihjbGllbnQsIG9wdGlvbnMpIHtcbiAgICBzdXBlcihjbGllbnQsIG9wdGlvbnMpO1xuICB9XG4gIGJpbmRNZXRob2RzKCkge1xuICAgIHN1cGVyLmJpbmRNZXRob2RzKCk7XG4gICAgdGhpcy5mZXRjaE5leHRQYWdlID0gdGhpcy5mZXRjaE5leHRQYWdlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5mZXRjaFByZXZpb3VzUGFnZSA9IHRoaXMuZmV0Y2hQcmV2aW91c1BhZ2UuYmluZCh0aGlzKTtcbiAgfVxuICBzZXRPcHRpb25zKG9wdGlvbnMsIG5vdGlmeU9wdGlvbnMpIHtcbiAgICBzdXBlci5zZXRPcHRpb25zKFxuICAgICAge1xuICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICBiZWhhdmlvcjogaW5maW5pdGVRdWVyeUJlaGF2aW9yKClcbiAgICAgIH0sXG4gICAgICBub3RpZnlPcHRpb25zXG4gICAgKTtcbiAgfVxuICBnZXRPcHRpbWlzdGljUmVzdWx0KG9wdGlvbnMpIHtcbiAgICBvcHRpb25zLmJlaGF2aW9yID0gaW5maW5pdGVRdWVyeUJlaGF2aW9yKCk7XG4gICAgcmV0dXJuIHN1cGVyLmdldE9wdGltaXN0aWNSZXN1bHQob3B0aW9ucyk7XG4gIH1cbiAgZmV0Y2hOZXh0UGFnZShvcHRpb25zKSB7XG4gICAgcmV0dXJuIHRoaXMuZmV0Y2goe1xuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIG1ldGE6IHtcbiAgICAgICAgZmV0Y2hNb3JlOiB7IGRpcmVjdGlvbjogXCJmb3J3YXJkXCIgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGZldGNoUHJldmlvdXNQYWdlKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5mZXRjaCh7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgbWV0YToge1xuICAgICAgICBmZXRjaE1vcmU6IHsgZGlyZWN0aW9uOiBcImJhY2t3YXJkXCIgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGNyZWF0ZVJlc3VsdChxdWVyeSwgb3B0aW9ucykge1xuICAgIGNvbnN0IHsgc3RhdGUgfSA9IHF1ZXJ5O1xuICAgIGNvbnN0IHBhcmVudFJlc3VsdCA9IHN1cGVyLmNyZWF0ZVJlc3VsdChxdWVyeSwgb3B0aW9ucyk7XG4gICAgY29uc3QgeyBpc0ZldGNoaW5nLCBpc1JlZmV0Y2hpbmcsIGlzRXJyb3IsIGlzUmVmZXRjaEVycm9yIH0gPSBwYXJlbnRSZXN1bHQ7XG4gICAgY29uc3QgZmV0Y2hEaXJlY3Rpb24gPSBzdGF0ZS5mZXRjaE1ldGE/LmZldGNoTW9yZT8uZGlyZWN0aW9uO1xuICAgIGNvbnN0IGlzRmV0Y2hOZXh0UGFnZUVycm9yID0gaXNFcnJvciAmJiBmZXRjaERpcmVjdGlvbiA9PT0gXCJmb3J3YXJkXCI7XG4gICAgY29uc3QgaXNGZXRjaGluZ05leHRQYWdlID0gaXNGZXRjaGluZyAmJiBmZXRjaERpcmVjdGlvbiA9PT0gXCJmb3J3YXJkXCI7XG4gICAgY29uc3QgaXNGZXRjaFByZXZpb3VzUGFnZUVycm9yID0gaXNFcnJvciAmJiBmZXRjaERpcmVjdGlvbiA9PT0gXCJiYWNrd2FyZFwiO1xuICAgIGNvbnN0IGlzRmV0Y2hpbmdQcmV2aW91c1BhZ2UgPSBpc0ZldGNoaW5nICYmIGZldGNoRGlyZWN0aW9uID09PSBcImJhY2t3YXJkXCI7XG4gICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgLi4ucGFyZW50UmVzdWx0LFxuICAgICAgZmV0Y2hOZXh0UGFnZTogdGhpcy5mZXRjaE5leHRQYWdlLFxuICAgICAgZmV0Y2hQcmV2aW91c1BhZ2U6IHRoaXMuZmV0Y2hQcmV2aW91c1BhZ2UsXG4gICAgICBoYXNOZXh0UGFnZTogaGFzTmV4dFBhZ2Uob3B0aW9ucywgc3RhdGUuZGF0YSksXG4gICAgICBoYXNQcmV2aW91c1BhZ2U6IGhhc1ByZXZpb3VzUGFnZShvcHRpb25zLCBzdGF0ZS5kYXRhKSxcbiAgICAgIGlzRmV0Y2hOZXh0UGFnZUVycm9yLFxuICAgICAgaXNGZXRjaGluZ05leHRQYWdlLFxuICAgICAgaXNGZXRjaFByZXZpb3VzUGFnZUVycm9yLFxuICAgICAgaXNGZXRjaGluZ1ByZXZpb3VzUGFnZSxcbiAgICAgIGlzUmVmZXRjaEVycm9yOiBpc1JlZmV0Y2hFcnJvciAmJiAhaXNGZXRjaE5leHRQYWdlRXJyb3IgJiYgIWlzRmV0Y2hQcmV2aW91c1BhZ2VFcnJvcixcbiAgICAgIGlzUmVmZXRjaGluZzogaXNSZWZldGNoaW5nICYmICFpc0ZldGNoaW5nTmV4dFBhZ2UgJiYgIWlzRmV0Y2hpbmdQcmV2aW91c1BhZ2VcbiAgICB9O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn07XG5leHBvcnQge1xuICBJbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIuanMubWFwIl0sIm5hbWVzIjpbIlF1ZXJ5T2JzZXJ2ZXIiLCJoYXNOZXh0UGFnZSIsImhhc1ByZXZpb3VzUGFnZSIsImluZmluaXRlUXVlcnlCZWhhdmlvciIsIkluZmluaXRlUXVlcnlPYnNlcnZlciIsImNvbnN0cnVjdG9yIiwiY2xpZW50Iiwib3B0aW9ucyIsImJpbmRNZXRob2RzIiwiZmV0Y2hOZXh0UGFnZSIsImJpbmQiLCJmZXRjaFByZXZpb3VzUGFnZSIsInNldE9wdGlvbnMiLCJub3RpZnlPcHRpb25zIiwiX29iamVjdFNwcmVhZCIsImJlaGF2aW9yIiwiZ2V0T3B0aW1pc3RpY1Jlc3VsdCIsImZldGNoIiwibWV0YSIsImZldGNoTW9yZSIsImRpcmVjdGlvbiIsImNyZWF0ZVJlc3VsdCIsInF1ZXJ5Iiwic3RhdGUiLCJwYXJlbnRSZXN1bHQiLCJpc0ZldGNoaW5nIiwiaXNSZWZldGNoaW5nIiwiaXNFcnJvciIsImlzUmVmZXRjaEVycm9yIiwiZmV0Y2hEaXJlY3Rpb24iLCJmZXRjaE1ldGEiLCJpc0ZldGNoTmV4dFBhZ2VFcnJvciIsImlzRmV0Y2hpbmdOZXh0UGFnZSIsImlzRmV0Y2hQcmV2aW91c1BhZ2VFcnJvciIsImlzRmV0Y2hpbmdQcmV2aW91c1BhZ2UiLCJyZXN1bHQiLCJkYXRhIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/mutation.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/mutation.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mutation: () => (/* binding */ Mutation),\n/* harmony export */   getDefaultState: () => (/* binding */ getDefaultState)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/removable.js\");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryer.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/retryer.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// src/mutation.ts\n\n\n\nvar Mutation = class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter(x => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ??\n    // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    this.#retryer = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_1__.createRetryer)({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({\n          type: \"failed\",\n          failureCount,\n          error\n        });\n      },\n      onPause: () => {\n        this.#dispatch({\n          type: \"pause\"\n        });\n      },\n      onContinue: () => {\n        this.#dispatch({\n          type: \"continue\"\n        });\n      },\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (!restored) {\n        this.#dispatch({\n          type: \"pending\",\n          variables,\n          isPaused\n        });\n        await this.#mutationCache.config.onMutate?.(variables, this);\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(data, variables, this.state.context, this);\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(data, null, this.state.variables, this.state.context, this);\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({\n        type: \"success\",\n        data\n      });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(error, variables, this.state.context, this);\n        await this.options.onError?.(error, variables, this.state.context);\n        await this.#mutationCache.config.onSettled?.(void 0, error, this.state.variables, this.state.context, this);\n        await this.options.onSettled?.(void 0, error, variables, this.state.context);\n        throw error;\n      } finally {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = state => {\n      switch (action.type) {\n        case \"failed\":\n          return _objectSpread(_objectSpread({}, state), {}, {\n            failureCount: action.failureCount,\n            failureReason: action.error\n          });\n        case \"pause\":\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isPaused: true\n          });\n        case \"continue\":\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isPaused: false\n          });\n        case \"pending\":\n          return _objectSpread(_objectSpread({}, state), {}, {\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          });\n        case \"success\":\n          return _objectSpread(_objectSpread({}, state), {}, {\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          });\n        case \"error\":\n          return _objectSpread(_objectSpread({}, state), {}, {\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          });\n      }\n    };\n    this.state = reducer(this.state);\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n      this.#observers.forEach(observer => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/mutation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/mutationCache.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutationCache: () => (/* binding */ MutationCache)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _mutation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutation.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/mutation.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// src/mutationCache.ts\n\n\n\n\nvar MutationCache = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */new Set();\n    this.#scopes = /* @__PURE__ */new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new _mutation_js__WEBPACK_IMPORTED_MODULE_1__.Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({\n      type: \"added\",\n      mutation\n    });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({\n      type: \"removed\",\n      mutation\n    });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(m => m.state.status === \"pending\");\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find(m => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n      this.#mutations.forEach(mutation => {\n        this.notify({\n          type: \"removed\",\n          mutation\n        });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = _objectSpread({\n      exact: true\n    }, filters);\n    return this.getAll().find(mutation => (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(defaultedFilters, mutation));\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter(mutation => (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation));\n  }\n  notify(event) {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter(x => x.state.isPaused);\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => Promise.all(pausedMutations.map(mutation => mutation.continue().catch(_utils_js__WEBPACK_IMPORTED_MODULE_3__.noop))));\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/notifyManager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNotifyManager: () => (/* binding */ createNotifyManager),\n/* harmony export */   notifyManager: () => (/* binding */ notifyManager)\n/* harmony export */ });\n// src/notifyManager.ts\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = callback => {\n    callback();\n  };\n  let batchNotifyFn = callback => {\n    callback();\n  };\n  let scheduleFn = cb => setTimeout(cb, 0);\n  const schedule = callback => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach(callback => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: callback => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: callback => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: fn => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: fn => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: fn => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL25vdGlmeU1hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLFNBQVNBLG1CQUFtQkEsQ0FBQSxFQUFHO0VBQzdCLElBQUlDLEtBQUssR0FBRyxFQUFFO0VBQ2QsSUFBSUMsWUFBWSxHQUFHLENBQUM7RUFDcEIsSUFBSUMsUUFBUSxHQUFJQyxRQUFRLElBQUs7SUFDM0JBLFFBQVEsQ0FBQyxDQUFDO0VBQ1osQ0FBQztFQUNELElBQUlDLGFBQWEsR0FBSUQsUUFBUSxJQUFLO0lBQ2hDQSxRQUFRLENBQUMsQ0FBQztFQUNaLENBQUM7RUFDRCxJQUFJRSxVQUFVLEdBQUlDLEVBQUUsSUFBS0MsVUFBVSxDQUFDRCxFQUFFLEVBQUUsQ0FBQyxDQUFDO0VBQzFDLE1BQU1FLFFBQVEsR0FBSUwsUUFBUSxJQUFLO0lBQzdCLElBQUlGLFlBQVksRUFBRTtNQUNoQkQsS0FBSyxDQUFDUyxJQUFJLENBQUNOLFFBQVEsQ0FBQztJQUN0QixDQUFDLE1BQU07TUFDTEUsVUFBVSxDQUFDLE1BQU07UUFDZkgsUUFBUSxDQUFDQyxRQUFRLENBQUM7TUFDcEIsQ0FBQyxDQUFDO0lBQ0o7RUFDRixDQUFDO0VBQ0QsTUFBTU8sS0FBSyxHQUFHQSxDQUFBLEtBQU07SUFDbEIsTUFBTUMsYUFBYSxHQUFHWCxLQUFLO0lBQzNCQSxLQUFLLEdBQUcsRUFBRTtJQUNWLElBQUlXLGFBQWEsQ0FBQ0MsTUFBTSxFQUFFO01BQ3hCUCxVQUFVLENBQUMsTUFBTTtRQUNmRCxhQUFhLENBQUMsTUFBTTtVQUNsQk8sYUFBYSxDQUFDRSxPQUFPLENBQUVWLFFBQVEsSUFBSztZQUNsQ0QsUUFBUSxDQUFDQyxRQUFRLENBQUM7VUFDcEIsQ0FBQyxDQUFDO1FBQ0osQ0FBQyxDQUFDO01BQ0osQ0FBQyxDQUFDO0lBQ0o7RUFDRixDQUFDO0VBQ0QsT0FBTztJQUNMVyxLQUFLLEVBQUdYLFFBQVEsSUFBSztNQUNuQixJQUFJWSxNQUFNO01BQ1ZkLFlBQVksRUFBRTtNQUNkLElBQUk7UUFDRmMsTUFBTSxHQUFHWixRQUFRLENBQUMsQ0FBQztNQUNyQixDQUFDLFNBQVM7UUFDUkYsWUFBWSxFQUFFO1FBQ2QsSUFBSSxDQUFDQSxZQUFZLEVBQUU7VUFDakJTLEtBQUssQ0FBQyxDQUFDO1FBQ1Q7TUFDRjtNQUNBLE9BQU9LLE1BQU07SUFDZixDQUFDO0lBQ0Q7QUFDSjtBQUNBO0lBQ0lDLFVBQVUsRUFBR2IsUUFBUSxJQUFLO01BQ3hCLE9BQU8sQ0FBQyxHQUFHYyxJQUFJLEtBQUs7UUFDbEJULFFBQVEsQ0FBQyxNQUFNO1VBQ2JMLFFBQVEsQ0FBQyxHQUFHYyxJQUFJLENBQUM7UUFDbkIsQ0FBQyxDQUFDO01BQ0osQ0FBQztJQUNILENBQUM7SUFDRFQsUUFBUTtJQUNSO0FBQ0o7QUFDQTtBQUNBO0lBQ0lVLGlCQUFpQixFQUFHQyxFQUFFLElBQUs7TUFDekJqQixRQUFRLEdBQUdpQixFQUFFO0lBQ2YsQ0FBQztJQUNEO0FBQ0o7QUFDQTtBQUNBO0lBQ0lDLHNCQUFzQixFQUFHRCxFQUFFLElBQUs7TUFDOUJmLGFBQWEsR0FBR2UsRUFBRTtJQUNwQixDQUFDO0lBQ0RFLFlBQVksRUFBR0YsRUFBRSxJQUFLO01BQ3BCZCxVQUFVLEdBQUdjLEVBQUU7SUFDakI7RUFDRixDQUFDO0FBQ0g7QUFDQSxJQUFJRyxhQUFhLEdBQUd2QixtQkFBbUIsQ0FBQyxDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvamludGFlay9Eb2N1bWVudHMvcHJvamVjdC9lcnAvZnJvbnQvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9ub3RpZnlNYW5hZ2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9ub3RpZnlNYW5hZ2VyLnRzXG5mdW5jdGlvbiBjcmVhdGVOb3RpZnlNYW5hZ2VyKCkge1xuICBsZXQgcXVldWUgPSBbXTtcbiAgbGV0IHRyYW5zYWN0aW9ucyA9IDA7XG4gIGxldCBub3RpZnlGbiA9IChjYWxsYmFjaykgPT4ge1xuICAgIGNhbGxiYWNrKCk7XG4gIH07XG4gIGxldCBiYXRjaE5vdGlmeUZuID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgY2FsbGJhY2soKTtcbiAgfTtcbiAgbGV0IHNjaGVkdWxlRm4gPSAoY2IpID0+IHNldFRpbWVvdXQoY2IsIDApO1xuICBjb25zdCBzY2hlZHVsZSA9IChjYWxsYmFjaykgPT4ge1xuICAgIGlmICh0cmFuc2FjdGlvbnMpIHtcbiAgICAgIHF1ZXVlLnB1c2goY2FsbGJhY2spO1xuICAgIH0gZWxzZSB7XG4gICAgICBzY2hlZHVsZUZuKCgpID0+IHtcbiAgICAgICAgbm90aWZ5Rm4oY2FsbGJhY2spO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuICBjb25zdCBmbHVzaCA9ICgpID0+IHtcbiAgICBjb25zdCBvcmlnaW5hbFF1ZXVlID0gcXVldWU7XG4gICAgcXVldWUgPSBbXTtcbiAgICBpZiAob3JpZ2luYWxRdWV1ZS5sZW5ndGgpIHtcbiAgICAgIHNjaGVkdWxlRm4oKCkgPT4ge1xuICAgICAgICBiYXRjaE5vdGlmeUZuKCgpID0+IHtcbiAgICAgICAgICBvcmlnaW5hbFF1ZXVlLmZvckVhY2goKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICBub3RpZnlGbihjYWxsYmFjayk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4ge1xuICAgIGJhdGNoOiAoY2FsbGJhY2spID0+IHtcbiAgICAgIGxldCByZXN1bHQ7XG4gICAgICB0cmFuc2FjdGlvbnMrKztcbiAgICAgIHRyeSB7XG4gICAgICAgIHJlc3VsdCA9IGNhbGxiYWNrKCk7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0cmFuc2FjdGlvbnMtLTtcbiAgICAgICAgaWYgKCF0cmFuc2FjdGlvbnMpIHtcbiAgICAgICAgICBmbHVzaCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogQWxsIGNhbGxzIHRvIHRoZSB3cmFwcGVkIGZ1bmN0aW9uIHdpbGwgYmUgYmF0Y2hlZC5cbiAgICAgKi9cbiAgICBiYXRjaENhbGxzOiAoY2FsbGJhY2spID0+IHtcbiAgICAgIHJldHVybiAoLi4uYXJncykgPT4ge1xuICAgICAgICBzY2hlZHVsZSgoKSA9PiB7XG4gICAgICAgICAgY2FsbGJhY2soLi4uYXJncyk7XG4gICAgICAgIH0pO1xuICAgICAgfTtcbiAgICB9LFxuICAgIHNjaGVkdWxlLFxuICAgIC8qKlxuICAgICAqIFVzZSB0aGlzIG1ldGhvZCB0byBzZXQgYSBjdXN0b20gbm90aWZ5IGZ1bmN0aW9uLlxuICAgICAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gZm9yIGV4YW1wbGUgd3JhcCBub3RpZmljYXRpb25zIHdpdGggYFJlYWN0LmFjdGAgd2hpbGUgcnVubmluZyB0ZXN0cy5cbiAgICAgKi9cbiAgICBzZXROb3RpZnlGdW5jdGlvbjogKGZuKSA9PiB7XG4gICAgICBub3RpZnlGbiA9IGZuO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogVXNlIHRoaXMgbWV0aG9kIHRvIHNldCBhIGN1c3RvbSBmdW5jdGlvbiB0byBiYXRjaCBub3RpZmljYXRpb25zIHRvZ2V0aGVyIGludG8gYSBzaW5nbGUgdGljay5cbiAgICAgKiBCeSBkZWZhdWx0IFJlYWN0IFF1ZXJ5IHdpbGwgdXNlIHRoZSBiYXRjaCBmdW5jdGlvbiBwcm92aWRlZCBieSBSZWFjdERPTSBvciBSZWFjdCBOYXRpdmUuXG4gICAgICovXG4gICAgc2V0QmF0Y2hOb3RpZnlGdW5jdGlvbjogKGZuKSA9PiB7XG4gICAgICBiYXRjaE5vdGlmeUZuID0gZm47XG4gICAgfSxcbiAgICBzZXRTY2hlZHVsZXI6IChmbikgPT4ge1xuICAgICAgc2NoZWR1bGVGbiA9IGZuO1xuICAgIH1cbiAgfTtcbn1cbnZhciBub3RpZnlNYW5hZ2VyID0gY3JlYXRlTm90aWZ5TWFuYWdlcigpO1xuZXhwb3J0IHtcbiAgY3JlYXRlTm90aWZ5TWFuYWdlcixcbiAgbm90aWZ5TWFuYWdlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vdGlmeU1hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZU5vdGlmeU1hbmFnZXIiLCJxdWV1ZSIsInRyYW5zYWN0aW9ucyIsIm5vdGlmeUZuIiwiY2FsbGJhY2siLCJiYXRjaE5vdGlmeUZuIiwic2NoZWR1bGVGbiIsImNiIiwic2V0VGltZW91dCIsInNjaGVkdWxlIiwicHVzaCIsImZsdXNoIiwib3JpZ2luYWxRdWV1ZSIsImxlbmd0aCIsImZvckVhY2giLCJiYXRjaCIsInJlc3VsdCIsImJhdGNoQ2FsbHMiLCJhcmdzIiwic2V0Tm90aWZ5RnVuY3Rpb24iLCJmbiIsInNldEJhdGNoTm90aWZ5RnVuY3Rpb24iLCJzZXRTY2hlZHVsZXIiLCJub3RpZnlNYW5hZ2VyIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/onlineManager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnlineManager: () => (/* binding */ OnlineManager),\n/* harmony export */   onlineManager: () => (/* binding */ onlineManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/onlineManager.ts\n\n\nvar OnlineManager = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = onOnline => {\n      if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach(listener => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL29ubGluZU1hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2lEO0FBQ1g7QUFDdEMsSUFBSUUsYUFBYSxHQUFHLGNBQWNGLDBEQUFZLENBQUM7RUFDN0MsQ0FBQ0csTUFBTSxHQUFHLElBQUk7RUFDZCxDQUFDQyxPQUFPO0VBQ1IsQ0FBQ0MsS0FBSztFQUNOQyxXQUFXQSxDQUFBLEVBQUc7SUFDWixLQUFLLENBQUMsQ0FBQztJQUNQLElBQUksQ0FBQyxDQUFDRCxLQUFLLEdBQUlFLFFBQVEsSUFBSztNQUMxQixJQUFJLENBQUNOLCtDQUFRLElBQUlPLE1BQU0sQ0FBQ0MsZ0JBQWdCLEVBQUU7UUFDeEMsTUFBTUMsY0FBYyxHQUFHQSxDQUFBLEtBQU1ILFFBQVEsQ0FBQyxJQUFJLENBQUM7UUFDM0MsTUFBTUksZUFBZSxHQUFHQSxDQUFBLEtBQU1KLFFBQVEsQ0FBQyxLQUFLLENBQUM7UUFDN0NDLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUMsUUFBUSxFQUFFQyxjQUFjLEVBQUUsS0FBSyxDQUFDO1FBQ3hERixNQUFNLENBQUNDLGdCQUFnQixDQUFDLFNBQVMsRUFBRUUsZUFBZSxFQUFFLEtBQUssQ0FBQztRQUMxRCxPQUFPLE1BQU07VUFDWEgsTUFBTSxDQUFDSSxtQkFBbUIsQ0FBQyxRQUFRLEVBQUVGLGNBQWMsQ0FBQztVQUNwREYsTUFBTSxDQUFDSSxtQkFBbUIsQ0FBQyxTQUFTLEVBQUVELGVBQWUsQ0FBQztRQUN4RCxDQUFDO01BQ0g7TUFDQTtJQUNGLENBQUM7RUFDSDtFQUNBRSxXQUFXQSxDQUFBLEVBQUc7SUFDWixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUNULE9BQU8sRUFBRTtNQUNsQixJQUFJLENBQUNVLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDVCxLQUFLLENBQUM7SUFDcEM7RUFDRjtFQUNBVSxhQUFhQSxDQUFBLEVBQUc7SUFDZCxJQUFJLENBQUMsSUFBSSxDQUFDQyxZQUFZLENBQUMsQ0FBQyxFQUFFO01BQ3hCLElBQUksQ0FBQyxDQUFDWixPQUFPLEdBQUcsQ0FBQztNQUNqQixJQUFJLENBQUMsQ0FBQ0EsT0FBTyxHQUFHLEtBQUssQ0FBQztJQUN4QjtFQUNGO0VBQ0FVLGdCQUFnQkEsQ0FBQ1QsS0FBSyxFQUFFO0lBQ3RCLElBQUksQ0FBQyxDQUFDQSxLQUFLLEdBQUdBLEtBQUs7SUFDbkIsSUFBSSxDQUFDLENBQUNELE9BQU8sR0FBRyxDQUFDO0lBQ2pCLElBQUksQ0FBQyxDQUFDQSxPQUFPLEdBQUdDLEtBQUssQ0FBQyxJQUFJLENBQUNZLFNBQVMsQ0FBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0VBQ2xEO0VBQ0FELFNBQVNBLENBQUNkLE1BQU0sRUFBRTtJQUNoQixNQUFNZ0IsT0FBTyxHQUFHLElBQUksQ0FBQyxDQUFDaEIsTUFBTSxLQUFLQSxNQUFNO0lBQ3ZDLElBQUlnQixPQUFPLEVBQUU7TUFDWCxJQUFJLENBQUMsQ0FBQ2hCLE1BQU0sR0FBR0EsTUFBTTtNQUNyQixJQUFJLENBQUNpQixTQUFTLENBQUNDLE9BQU8sQ0FBRUMsUUFBUSxJQUFLO1FBQ25DQSxRQUFRLENBQUNuQixNQUFNLENBQUM7TUFDbEIsQ0FBQyxDQUFDO0lBQ0o7RUFDRjtFQUNBb0IsUUFBUUEsQ0FBQSxFQUFHO0lBQ1QsT0FBTyxJQUFJLENBQUMsQ0FBQ3BCLE1BQU07RUFDckI7QUFDRixDQUFDO0FBQ0QsSUFBSXFCLGFBQWEsR0FBRyxJQUFJdEIsYUFBYSxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaW50YWVrL0RvY3VtZW50cy9wcm9qZWN0L2VycC9mcm9udC9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL29ubGluZU1hbmFnZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL29ubGluZU1hbmFnZXIudHNcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS5qc1wiO1xuaW1wb3J0IHsgaXNTZXJ2ZXIgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xudmFyIE9ubGluZU1hbmFnZXIgPSBjbGFzcyBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gICNvbmxpbmUgPSB0cnVlO1xuICAjY2xlYW51cDtcbiAgI3NldHVwO1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuI3NldHVwID0gKG9uT25saW5lKSA9PiB7XG4gICAgICBpZiAoIWlzU2VydmVyICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIGNvbnN0IG9ubGluZUxpc3RlbmVyID0gKCkgPT4gb25PbmxpbmUodHJ1ZSk7XG4gICAgICAgIGNvbnN0IG9mZmxpbmVMaXN0ZW5lciA9ICgpID0+IG9uT25saW5lKGZhbHNlKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvbmxpbmVcIiwgb25saW5lTGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvZmZsaW5lXCIsIG9mZmxpbmVMaXN0ZW5lciwgZmFsc2UpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwib25saW5lXCIsIG9ubGluZUxpc3RlbmVyKTtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgb2ZmbGluZUxpc3RlbmVyKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9O1xuICB9XG4gIG9uU3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy4jY2xlYW51cCkge1xuICAgICAgdGhpcy5zZXRFdmVudExpc3RlbmVyKHRoaXMuI3NldHVwKTtcbiAgICB9XG4gIH1cbiAgb25VbnN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcbiAgICAgIHRoaXMuI2NsZWFudXA/LigpO1xuICAgICAgdGhpcy4jY2xlYW51cCA9IHZvaWQgMDtcbiAgICB9XG4gIH1cbiAgc2V0RXZlbnRMaXN0ZW5lcihzZXR1cCkge1xuICAgIHRoaXMuI3NldHVwID0gc2V0dXA7XG4gICAgdGhpcy4jY2xlYW51cD8uKCk7XG4gICAgdGhpcy4jY2xlYW51cCA9IHNldHVwKHRoaXMuc2V0T25saW5lLmJpbmQodGhpcykpO1xuICB9XG4gIHNldE9ubGluZShvbmxpbmUpIHtcbiAgICBjb25zdCBjaGFuZ2VkID0gdGhpcy4jb25saW5lICE9PSBvbmxpbmU7XG4gICAgaWYgKGNoYW5nZWQpIHtcbiAgICAgIHRoaXMuI29ubGluZSA9IG9ubGluZTtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgICAgIGxpc3RlbmVyKG9ubGluZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgaXNPbmxpbmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuI29ubGluZTtcbiAgfVxufTtcbnZhciBvbmxpbmVNYW5hZ2VyID0gbmV3IE9ubGluZU1hbmFnZXIoKTtcbmV4cG9ydCB7XG4gIE9ubGluZU1hbmFnZXIsXG4gIG9ubGluZU1hbmFnZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vbmxpbmVNYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJTdWJzY3JpYmFibGUiLCJpc1NlcnZlciIsIk9ubGluZU1hbmFnZXIiLCJvbmxpbmUiLCJjbGVhbnVwIiwic2V0dXAiLCJjb25zdHJ1Y3RvciIsIm9uT25saW5lIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9ubGluZUxpc3RlbmVyIiwib2ZmbGluZUxpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm9uU3Vic2NyaWJlIiwic2V0RXZlbnRMaXN0ZW5lciIsIm9uVW5zdWJzY3JpYmUiLCJoYXNMaXN0ZW5lcnMiLCJzZXRPbmxpbmUiLCJiaW5kIiwiY2hhbmdlZCIsImxpc3RlbmVycyIsImZvckVhY2giLCJsaXN0ZW5lciIsImlzT25saW5lIiwib25saW5lTWFuYWdlciJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/query.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/query.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: () => (/* binding */ Query),\n/* harmony export */   fetchState: () => (/* binding */ fetchState)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryer.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/retryer.js\");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/removable.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// src/query.ts\n\n\n\n\nvar Query = class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = _objectSpread(_objectSpread({}, this.#defaultOptions), options);\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.replaceData)(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({\n      type: \"setState\",\n      state,\n      setStateOptions\n    });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({\n      silent: true\n    });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(observer => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.resolveEnabled)(observer.options.enabled, this) !== false);\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === _utils_js__WEBPACK_IMPORTED_MODULE_1__.skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStale() {\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(observer => observer.getCurrentResult().isStale);\n    }\n    return this.state.data === void 0;\n  }\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || this.state.data === void 0 || !(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.timeUntilStale)(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find(x => x.shouldFetchOnWindowFocus());\n    observer?.refetch({\n      cancelRefetch: false\n    });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find(x => x.shouldFetchOnReconnect());\n    observer?.refetch({\n      cancelRefetch: false\n    });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({\n        type: \"observerAdded\",\n        query: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter(x => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({\n        type: \"observerRemoved\",\n        query: this,\n        observer\n      });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({\n        type: \"invalidate\"\n      });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({\n          silent: true\n        });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find(x => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (true) {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(`As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`);\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = object => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureQueryFn)(this.options, fetchOptions);\n      const queryFnContext = {\n        client: this.#client,\n        queryKey: this.queryKey,\n        meta: this.meta\n      };\n      addSignalProperty(queryFnContext);\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(queryFn, queryFnContext, this);\n      }\n      return queryFn(queryFnContext);\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      client: this.#client,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({\n        type: \"fetch\",\n        meta: context.fetchOptions?.meta\n      });\n    }\n    const onError = error => {\n      if (!((0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error)) {\n        this.#cache.config.onError?.(error, this);\n        this.#cache.config.onSettled?.(this.state.data, error, this);\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.createRetryer)({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: data => {\n        if (data === void 0) {\n          if (true) {\n            console.error(`Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`);\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(data, this.state.error, this);\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({\n          type: \"failed\",\n          failureCount,\n          error\n        });\n      },\n      onPause: () => {\n        this.#dispatch({\n          type: \"pause\"\n        });\n      },\n      onContinue: () => {\n        this.#dispatch({\n          type: \"continue\"\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = state => {\n      switch (action.type) {\n        case \"failed\":\n          return _objectSpread(_objectSpread({}, state), {}, {\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          });\n        case \"pause\":\n          return _objectSpread(_objectSpread({}, state), {}, {\n            fetchStatus: \"paused\"\n          });\n        case \"continue\":\n          return _objectSpread(_objectSpread({}, state), {}, {\n            fetchStatus: \"fetching\"\n          });\n        case \"fetch\":\n          return _objectSpread(_objectSpread(_objectSpread({}, state), fetchState(state.data, this.options)), {}, {\n            fetchMeta: action.meta ?? null\n          });\n        case \"success\":\n          return _objectSpread(_objectSpread({}, state), {}, {\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\"\n          }, !action.manual && {\n            fetchStatus: \"idle\",\n            fetchFailureCount: 0,\n            fetchFailureReason: null\n          });\n        case \"error\":\n          const error = action.error;\n          if ((0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.revert && this.#revertState) {\n            return _objectSpread(_objectSpread({}, this.#revertState), {}, {\n              fetchStatus: \"idle\"\n            });\n          }\n          return _objectSpread(_objectSpread({}, state), {}, {\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          });\n        case \"invalidate\":\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isInvalidated: true\n          });\n        case \"setState\":\n          return _objectSpread(_objectSpread({}, state), action.state);\n      }\n    };\n    this.state = reducer(this.state);\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({\n        query: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return _objectSpread({\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.canFetch)(options.networkMode) ? \"fetching\" : \"paused\"\n  }, data === void 0 && {\n    error: null,\n    status: \"pending\"\n  });\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/queryCache.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/queryCache.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryCache: () => (/* binding */ QueryCache)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/query.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// src/queryCache.ts\n\n\n\n\nvar QueryCache = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.hashQueryKeyByOptions)(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new _query_js__WEBPACK_IMPORTED_MODULE_2__.Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({\n        type: \"removed\",\n        query\n      });\n    }\n  }\n  clear() {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.getAll().forEach(query => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = _objectSpread({\n      exact: true\n    }, filters);\n    return this.getAll().find(query => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(defaultedFilters, query));\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter(query => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query)) : queries;\n  }\n  notify(event) {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.getAll().forEach(query => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.getAll().forEach(query => {\n        query.onOnline();\n      });\n    });\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3F1ZXJ5Q2FjaGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQytEO0FBQzVCO0FBQ2dCO0FBQ0Y7QUFDakQsSUFBSUssVUFBVSxHQUFHLGNBQWNELDBEQUFZLENBQUM7RUFDMUNFLFdBQVdBLENBQUNDLE1BQU0sR0FBRyxDQUFDLENBQUMsRUFBRTtJQUN2QixLQUFLLENBQUMsQ0FBQztJQUNQLElBQUksQ0FBQ0EsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQyxDQUFDQyxPQUFPLEdBQUcsZUFBZ0IsSUFBSUMsR0FBRyxDQUFDLENBQUM7RUFDM0M7RUFDQSxDQUFDRCxPQUFPO0VBQ1JFLEtBQUtBLENBQUNDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxLQUFLLEVBQUU7SUFDNUIsTUFBTUMsUUFBUSxHQUFHRixPQUFPLENBQUNFLFFBQVE7SUFDakMsTUFBTUMsU0FBUyxHQUFHSCxPQUFPLENBQUNHLFNBQVMsSUFBSWYsZ0VBQXFCLENBQUNjLFFBQVEsRUFBRUYsT0FBTyxDQUFDO0lBQy9FLElBQUlJLEtBQUssR0FBRyxJQUFJLENBQUNDLEdBQUcsQ0FBQ0YsU0FBUyxDQUFDO0lBQy9CLElBQUksQ0FBQ0MsS0FBSyxFQUFFO01BQ1ZBLEtBQUssR0FBRyxJQUFJZCw0Q0FBSyxDQUFDO1FBQ2hCUyxNQUFNO1FBQ05HLFFBQVE7UUFDUkMsU0FBUztRQUNUSCxPQUFPLEVBQUVELE1BQU0sQ0FBQ08sbUJBQW1CLENBQUNOLE9BQU8sQ0FBQztRQUM1Q0MsS0FBSztRQUNMTSxjQUFjLEVBQUVSLE1BQU0sQ0FBQ1MsZ0JBQWdCLENBQUNOLFFBQVE7TUFDbEQsQ0FBQyxDQUFDO01BQ0YsSUFBSSxDQUFDTyxHQUFHLENBQUNMLEtBQUssQ0FBQztJQUNqQjtJQUNBLE9BQU9BLEtBQUs7RUFDZDtFQUNBSyxHQUFHQSxDQUFDTCxLQUFLLEVBQUU7SUFDVCxJ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QUFBLEVBQUc7SUFDVDlDLDREQUFhLENBQUM0QixLQUFLLENBQUMsTUFBTTtNQUN4QixJQUFJLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUNDLE9BQU8sQ0FBRWpCLEtBQUssSUFBSztRQUMvQkEsS0FBSyxDQUFDaUMsUUFBUSxDQUFDLENBQUM7TUFDbEIsQ0FBQyxDQUFDO0lBQ0osQ0FBQyxDQUFDO0VBQ0o7QUFDRixDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvamludGFlay9Eb2N1bWVudHMvcHJvamVjdC9lcnAvZnJvbnQvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9xdWVyeUNhY2hlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9xdWVyeUNhY2hlLnRzXG5pbXBvcnQgeyBoYXNoUXVlcnlLZXlCeU9wdGlvbnMsIG1hdGNoUXVlcnkgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuaW1wb3J0IHsgUXVlcnkgfSBmcm9tIFwiLi9xdWVyeS5qc1wiO1xuaW1wb3J0IHsgbm90aWZ5TWFuYWdlciB9IGZyb20gXCIuL25vdGlmeU1hbmFnZXIuanNcIjtcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS5qc1wiO1xudmFyIFF1ZXJ5Q2FjaGUgPSBjbGFzcyBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLiNxdWVyaWVzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgfVxuICAjcXVlcmllcztcbiAgYnVpbGQoY2xpZW50LCBvcHRpb25zLCBzdGF0ZSkge1xuICAgIGNvbnN0IHF1ZXJ5S2V5ID0gb3B0aW9ucy5xdWVyeUtleTtcbiAgICBjb25zdCBxdWVyeUhhc2ggPSBvcHRpb25zLnF1ZXJ5SGFzaCA/PyBoYXNoUXVlcnlLZXlCeU9wdGlvbnMocXVlcnlLZXksIG9wdGlvbnMpO1xuICAgIGxldCBxdWVyeSA9IHRoaXMuZ2V0KHF1ZXJ5SGFzaCk7XG4gICAgaWYgKCFxdWVyeSkge1xuICAgICAgcXVlcnkgPSBuZXcgUXVlcnkoe1xuICAgICAgICBjbGllbnQsXG4gICAgICAgIHF1ZXJ5S2V5LFxuICAgICAgICBxdWVyeUhhc2gsXG4gICAgICAgIG9wdGlvbnM6IGNsaWVudC5kZWZhdWx0UXVlcnlPcHRpb25zKG9wdGlvbnMpLFxuICAgICAgICBzdGF0ZSxcbiAgICAgICAgZGVmYXVsdE9wdGlvbnM6IGNsaWVudC5nZXRRdWVyeURlZmF1bHRzKHF1ZXJ5S2V5KVxuICAgICAgfSk7XG4gICAgICB0aGlzLmFkZChxdWVyeSk7XG4gICAgfVxuICAgIHJldHVybiBxdWVyeTtcbiAgfVxuICBhZGQocXVlcnkpIHtcbiAgICBpZiAoIXRoaXMuI3F1ZXJpZXMuaGFzKHF1ZXJ5LnF1ZXJ5SGFzaCkpIHtcbiAgICAgIHRoaXMuI3F1ZXJpZXMuc2V0KHF1ZXJ5LnF1ZXJ5SGFzaCwgcXVlcnkpO1xuICAgICAgdGhpcy5ub3RpZnkoe1xuICAgICAgICB0eXBlOiBcImFkZGVkXCIsXG4gICAgICAgIHF1ZXJ5XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgcmVtb3ZlKHF1ZXJ5KSB7XG4gICAgY29uc3QgcXVlcnlJbk1hcCA9IHRoaXMuI3F1ZXJpZXMuZ2V0KHF1ZXJ5LnF1ZXJ5SGFzaCk7XG4gICAgaWYgKHF1ZXJ5SW5NYXApIHtcbiAgICAgIHF1ZXJ5LmRlc3Ryb3koKTtcbiAgICAgIGlmIChxdWVyeUluTWFwID09PSBxdWVyeSkge1xuICAgICAgICB0aGlzLiNxdWVyaWVzLmRlbGV0ZShxdWVyeS5xdWVyeUhhc2gpO1xuICAgICAgfVxuICAgICAgdGhpcy5ub3RpZnkoeyB0eXBlOiBcInJlbW92ZWRcIiwgcXVlcnkgfSk7XG4gICAgfVxuICB9XG4gIGNsZWFyKCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5nZXRBbGwoKS5mb3JFYWNoKChxdWVyeSkgPT4ge1xuICAgICAgICB0aGlzLnJlbW92ZShxdWVyeSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBnZXQocXVlcnlIYXNoKSB7XG4gICAgcmV0dXJuIHRoaXMuI3F1ZXJpZXMuZ2V0KHF1ZXJ5SGFzaCk7XG4gIH1cbiAgZ2V0QWxsKCkge1xuICAgIHJldHVybiBbLi4udGhpcy4jcXVlcmllcy52YWx1ZXMoKV07XG4gIH1cbiAgZmluZChmaWx0ZXJzKSB7XG4gICAgY29uc3QgZGVmYXVsdGVkRmlsdGVycyA9IHsgZXhhY3Q6IHRydWUsIC4uLmZpbHRlcnMgfTtcbiAgICByZXR1cm4gdGhpcy5nZXRBbGwoKS5maW5kKFxuICAgICAgKHF1ZXJ5KSA9PiBtYXRjaFF1ZXJ5KGRlZmF1bHRlZEZpbHRlcnMsIHF1ZXJ5KVxuICAgICk7XG4gIH1cbiAgZmluZEFsbChmaWx0ZXJzID0ge30pIHtcbiAgICBjb25zdCBxdWVyaWVzID0gdGhpcy5nZXRBbGwoKTtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoZmlsdGVycykubGVuZ3RoID4gMCA/IHF1ZXJpZXMuZmlsdGVyKChxdWVyeSkgPT4gbWF0Y2hRdWVyeShmaWx0ZXJzLCBxdWVyeSkpIDogcXVlcmllcztcbiAgfVxuICBub3RpZnkoZXZlbnQpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgICAgIGxpc3RlbmVyKGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIG9uRm9jdXMoKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLmdldEFsbCgpLmZvckVhY2goKHF1ZXJ5KSA9PiB7XG4gICAgICAgIHF1ZXJ5Lm9uRm9jdXMoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIG9uT25saW5lKCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5nZXRBbGwoKS5mb3JFYWNoKChxdWVyeSkgPT4ge1xuICAgICAgICBxdWVyeS5vbk9ubGluZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn07XG5leHBvcnQge1xuICBRdWVyeUNhY2hlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcnlDYWNoZS5qcy5tYXAiXSwibmFtZXMiOlsiaGFzaFF1ZXJ5S2V5QnlPcHRpb25zIiwibWF0Y2hRdWVyeSIsIlF1ZXJ5Iiwibm90aWZ5TWFuYWdlciIsIlN1YnNjcmliYWJsZSIsIlF1ZXJ5Q2FjaGUiLCJjb25zdHJ1Y3RvciIsImNvbmZpZyIsInF1ZXJpZXMiLCJNYXAiLCJidWlsZCIsImNsaWVudCIsIm9wdGlvbnMiLCJzdGF0ZSIsInF1ZXJ5S2V5IiwicXVlcnlIYXNoIiwicXVlcnkiLCJnZXQiLCJkZWZhdWx0UXVlcnlPcHRpb25zIiwiZGVmYXVsdE9wdGlvbnMiLCJnZXRRdWVyeURlZmF1bHRzIiwiYWRkIiwiaGFzIiwic2V0Iiwibm90aWZ5IiwidHlwZSIsInJlbW92ZSIsInF1ZXJ5SW5NYXAiLCJkZXN0cm95IiwiZGVsZXRlIiwiY2xlYXIiLCJiYXRjaCIsImdldEFsbCIsImZvckVhY2giLCJ2YWx1ZXMiLCJmaW5kIiwiZmlsdGVycyIsImRlZmF1bHRlZEZpbHRlcnMiLCJfb2JqZWN0U3ByZWFkIiwiZXhhY3QiLCJmaW5kQWxsIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsImZpbHRlciIsImV2ZW50IiwibGlzdGVuZXJzIiwibGlzdGVuZXIiLCJvbkZvY3VzIiwib25PbmxpbmUiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/queryCache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/queryClient.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/queryClient.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClient: () => (/* binding */ QueryClient)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _queryCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryCache.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/queryCache.js\");\n/* harmony import */ var _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutationCache.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js\");\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./onlineManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./infiniteQueryBehavior.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// src/queryClient.ts\n\n\n\n\n\n\n\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new _queryCache_js__WEBPACK_IMPORTED_MODULE_0__.QueryCache();\n    this.#mutationCache = config.mutationCache || new _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__.MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */new Map();\n    this.#mutationDefaults = /* @__PURE__ */new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = _focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.subscribe(async focused => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.subscribe(async online => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll(_objectSpread(_objectSpread({}, filters), {}, {\n      fetchStatus: \"fetching\"\n    })).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll(_objectSpread(_objectSpread({}, filters), {}, {\n      status: \"pending\"\n    })).length;\n  }\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({\n      queryKey\n    });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.resolveStaleTime)(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({\n      queryKey,\n      state\n    }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({\n      queryKey\n    });\n    const query = this.#queryCache.get(defaultedOptions.queryHash);\n    const prevData = query?.state.data;\n    const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.functionalUpdate)(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, _objectSpread(_objectSpread({}, options), {}, {\n      manual: true\n    }));\n  }\n  setQueriesData(filters, updater, options) {\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => this.#queryCache.findAll(filters).map(({\n      queryKey\n    }) => [queryKey, this.setQueryData(queryKey, updater, options)]));\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({\n      queryKey\n    });\n    return this.#queryCache.get(options.queryHash)?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    const refetchFilters = _objectSpread({\n      type: \"active\"\n    }, filters);\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = _objectSpread({\n      revert: true\n    }, cancelOptions);\n    const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => this.#queryCache.findAll(filters).map(query => query.cancel(defaultedCancelOptions)));\n    return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach(query => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      const refetchFilters = _objectSpread(_objectSpread({}, filters), {}, {\n        type: filters?.refetchType ?? filters?.type ?? \"active\"\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = _objectSpread(_objectSpread({}, options), {}, {\n      cancelRefetch: options.cancelRefetch ?? true\n    });\n    const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => this.#queryCache.findAll(filters).filter(query => !query.isDisabled()).map(query => {\n      let promise = query.fetch(void 0, fetchOptions);\n      if (!fetchOptions.throwOnError) {\n        promise = promise.catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n      }\n      return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n    }));\n    return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.resolveStaleTime)(defaultedOptions.staleTime, query)) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryBehavior)(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryBehavior)(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (_onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach(queryDefault => {\n      if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    let result = {};\n    defaults.forEach(queryDefault => {\n      if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(mutationKey, queryDefault.mutationKey)) {\n        result = _objectSpread(_objectSpread({}, result), queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, this.#defaultOptions.queries), this.getQueryDefaults(options.queryKey)), options), {}, {\n      _defaulted: true\n    });\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashQueryKeyByOptions)(defaultedOptions.queryKey, defaultedOptions);\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === _utils_js__WEBPACK_IMPORTED_MODULE_4__.skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, this.#defaultOptions.mutations), options?.mutationKey && this.getMutationDefaults(options.mutationKey)), options), {}, {\n      _defaulted: true\n    });\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/queryClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/queryObserver.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/queryObserver.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryObserver: () => (/* binding */ QueryObserver)\n/* harmony export */ });\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./focusManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./query.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/query.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _thenable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./thenable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/thenable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError(\"Cannot destructure \" + obj); }\n// src/queryObserver.ts\n\n\n\n\n\n\nvar QueryObserver = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = (0,_thenable_js__WEBPACK_IMPORTED_MODULE_1__.pendingThenable)();\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(new Error(\"experimental_prefetchInRender feature flag is not enabled\"));\n    }\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(this.#currentQuery, this.options, this.options.refetchOnReconnect);\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.#currentQuery, this.options, this.options.refetchOnWindowFocus);\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\"Expected enabled to be a boolean or a callback that returns a boolean\");\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.shallowEqualObjects)(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(this.#currentQuery, prevQuery, this.options, prevOptions)) {\n      this.#executeFetch();\n    }\n    this.updateResult(notifyOptions);\n    if (mounted && (this.#currentQuery !== prevQuery || (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(this.options.enabled, this.#currentQuery) !== (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(prevOptions.enabled, this.#currentQuery) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveStaleTime)(this.options.staleTime, this.#currentQuery) !== (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveStaleTime)(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(this.options.enabled, this.#currentQuery) !== (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    const trackedResult = {};\n    Object.keys(result).forEach(key => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackProp(key);\n          onPropTracked?.(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch(_ref = {}) {\n    let options = Object.assign({}, (_objectDestructuringEmpty(_ref), _ref));\n    return this.fetch(_objectSpread({}, options));\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch(_objectSpread(_objectSpread({}, fetchOptions), {}, {\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    })).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(this.options, fetchOptions);\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(_utils_js__WEBPACK_IMPORTED_MODULE_2__.noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveStaleTime)(this.options.staleTime, this.#currentQuery);\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_2__.isServer || this.#currentResult.isStale || !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isValidTimeout)(staleTime)) {\n      return;\n    }\n    const time = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.timeUntilStale)(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_2__.isServer || (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(this.options.enabled, this.#currentQuery) === false || !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isValidTimeout)(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || _focusManager_js__WEBPACK_IMPORTED_MODULE_3__.focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const {\n      state\n    } = query;\n    let newState = _objectSpread({}, state);\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = _objectSpread(_objectSpread({}, newState), (0,_query_js__WEBPACK_IMPORTED_MODULE_4__.fetchState)(state.data, query.options));\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let {\n      error,\n      errorUpdatedAt,\n      status\n    } = newState;\n    if (options.select && newState.data !== void 0) {\n      if (prevResult && newState.data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(newState.data);\n          data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.replaceData)(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    } else {\n      data = newState.data;\n    }\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(this.#lastQueryWithDefinedData?.state.data, this.#lastQueryWithDefinedData) : options.placeholderData;\n        if (options.select && placeholderData !== void 0) {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.#selectError = null;\n          } catch (selectError) {\n            this.#selectError = selectError;\n          }\n        }\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.replaceData)(prevResult?.data, placeholderData, options);\n        isPlaceholderData = true;\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = thenable => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = (0,_thenable_js__WEBPACK_IMPORTED_MODULE_1__.pendingThenable)();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult(notifyOptions) {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.shallowEqualObjects)(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const defaultNotifyOptions = {};\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const {\n        notifyOnChangeProps\n      } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(notifyOnChangePropsValue ?? this.#trackedProps);\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some(key => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n    this.#notify(_objectSpread(_objectSpread({}, defaultNotifyOptions), notifyOptions));\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(listener => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(options.enabled, query) !== false) {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(options.enabled, query) !== false && query.isStaleByTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveStaleTime)(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.shallowEqualObjects)(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3F1ZXJ5T2JzZXJ2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2lEO0FBQ0U7QUFDWDtBQUNTO0FBQ0Q7QUFVNUI7QUFDcEIsSUFBSWEsYUFBYSxHQUFHLGNBQWNWLDBEQUFZLENBQUM7RUFDN0NXLFdBQVdBLENBQUNDLE1BQU0sRUFBRUMsT0FBTyxFQUFFO0lBQzNCLEtBQUssQ0FBQyxDQUFDO0lBQ1AsSUFBSSxDQUFDQSxPQUFPLEdBQUdBLE9BQU87SUFDdEIsSUFBSSxDQUFDLENBQUNELE1BQU0sR0FBR0EsTUFBTTtJQUNyQixJQUFJLENBQUMsQ0FBQ0UsV0FBVyxHQUFHLElBQUk7SUFDeEIsSUFBSSxDQUFDLENBQUNDLGVBQWUsR0FBR2QsNkRBQWUsQ0FBQyxDQUFDO0lBQ3pDLElBQUksQ0FBQyxJQUFJLENBQUNZLE9BQU8sQ0FBQ0csNkJBQTZCLEVBQUU7TUFDL0MsSUFBSSxDQUFDLENBQUNELGVBQWUsQ0FBQ0UsTUFBTSxDQUMxQixJQUFJQyxLQUFLLENBQUMsMkRBQTJELENBQ3ZFLENBQUM7SUFDSDtJQUNBLElBQUksQ0FBQ0MsV0FBVyxDQUFDLENBQUM7SUFDbEIsSUFBSSxDQUFDQyxVQUFVLENBQUNQLE9BQU8sQ0FBQztFQUMxQjtFQUNBLENBQUNELE1BQU07RUFDUCxDQUFDUyxZQUFZLEdBQUcsS0FBSyxDQUFDO0VBQ3RCLENBQUNDLHdCQUF3QixHQUFHLEtBQUssQ0FBQztFQUNsQyxDQUFDQyxhQUFhLEdBQUcsS0FBSyxDQUFDO0VBQ3ZCLENBQUNDLGtCQUFrQjtFQUNuQixDQUFDQyxvQkFBb0I7RUFDckIsQ0FBQ1YsZUFBZTtFQUNoQixDQUFDRCxXQUFXO0VBQ1osQ0FBQ1ksUUFBUTtFQUNULENBQUNDLFlBQVk7RUFDYjtFQUNBO0VBQ0EsQ0FBQ0Msd0JBQXdCO0VBQ3pCLENBQUNDLGNBQWM7RUFDZixDQUFDQyxpQkFB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LEtBQUtSLFNBQVMsSUFBSW5ELHlEQUFjLENBQUNrRCxXQUFXLENBQUNHLE9BQU8sRUFBRU0sS0FBSyxDQUFDLEtBQUssS0FBSyxNQUFNLENBQUNwRCxPQUFPLENBQUNvTCxRQUFRLElBQUloSSxLQUFLLENBQUNjLEtBQUssQ0FBQzhELE1BQU0sS0FBSyxPQUFPLENBQUMsSUFBSS9CLE9BQU8sQ0FBQzdDLEtBQUssRUFBRXBELE9BQU8sQ0FBQztBQUMxSztBQUNBLFNBQVNpRyxPQUFPQSxDQUFDN0MsS0FBSyxFQUFFcEQsT0FBTyxFQUFFO0VBQy9CLE9BQU9QLHlEQUFjLENBQUNPLE9BQU8sQ0FBQzhDLE9BQU8sRUFBRU0sS0FBSyxDQUFDLEtBQUssS0FBSyxJQUFJQSxLQUFLLENBQUNpSSxhQUFhLENBQUMzTCwyREFBZ0IsQ0FBQ00sT0FBTyxDQUFDd0QsU0FBUyxFQUFFSixLQUFLLENBQUMsQ0FBQztBQUM1SDtBQUNBLFNBQVNhLHFDQUFxQ0EsQ0FBQ1osUUFBUSxFQUFFaUksZ0JBQWdCLEVBQUU7RUFDekUsSUFBSSxDQUFDM0wsOERBQW1CLENBQUMwRCxRQUFRLENBQUNjLGdCQUFnQixDQUFDLENBQUMsRUFBRW1ILGdCQUFnQixDQUFDLEVBQUU7SUFDdkUsT0FBTyxJQUFJO0VBQ2I7RUFDQSxPQUFPLEtBQUs7QUFDZCIsInNvdXJjZXMiOlsiL1VzZXJzL2ppbnRhZWsvRG9jdW1lbnRzL3Byb2plY3QvZXJwL2Zyb250L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcXVlcnlPYnNlcnZlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvcXVlcnlPYnNlcnZlci50c1xuaW1wb3J0IHsgZm9jdXNNYW5hZ2VyIH0gZnJvbSBcIi4vZm9jdXNNYW5hZ2VyLmpzXCI7XG5pbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSBcIi4vbm90aWZ5TWFuYWdlci5qc1wiO1xuaW1wb3J0IHsgZmV0Y2hTdGF0ZSB9IGZyb20gXCIuL3F1ZXJ5LmpzXCI7XG5pbXBvcnQgeyBTdWJzY3JpYmFibGUgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUuanNcIjtcbmltcG9ydCB7IHBlbmRpbmdUaGVuYWJsZSB9IGZyb20gXCIuL3RoZW5hYmxlLmpzXCI7XG5pbXBvcnQge1xuICBpc1NlcnZlcixcbiAgaXNWYWxpZFRpbWVvdXQsXG4gIG5vb3AsXG4gIHJlcGxhY2VEYXRhLFxuICByZXNvbHZlRW5hYmxlZCxcbiAgcmVzb2x2ZVN0YWxlVGltZSxcbiAgc2hhbGxvd0VxdWFsT2JqZWN0cyxcbiAgdGltZVVudGlsU3RhbGVcbn0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbnZhciBRdWVyeU9ic2VydmVyID0gY2xhc3MgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICBjb25zdHJ1Y3RvcihjbGllbnQsIG9wdGlvbnMpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy4jY2xpZW50ID0gY2xpZW50O1xuICAgIHRoaXMuI3NlbGVjdEVycm9yID0gbnVsbDtcbiAgICB0aGlzLiNjdXJyZW50VGhlbmFibGUgPSBwZW5kaW5nVGhlbmFibGUoKTtcbiAgICBpZiAoIXRoaXMub3B0aW9ucy5leHBlcmltZW50YWxfcHJlZmV0Y2hJblJlbmRlcikge1xuICAgICAgdGhpcy4jY3VycmVudFRoZW5hYmxlLnJlamVjdChcbiAgICAgICAgbmV3IEVycm9yKFwiZXhwZXJpbWVudGFsX3ByZWZldGNoSW5SZW5kZXIgZmVhdHVyZSBmbGFnIGlzIG5vdCBlbmFibGVkXCIpXG4gICAgICApO1xuICAgIH1cbiAgICB0aGlzLmJpbmRNZXRob2RzKCk7XG4gICAgdGhpcy5zZXRPcHRpb25zKG9wdGlvbnMpO1xuICB9XG4gICNjbGllbnQ7XG4gICNjdXJyZW50UXVlcnkgPSB2b2lkIDA7XG4gICNjdXJyZW50UXVlcnlJbml0aWFsU3RhdGUgPSB2b2lkIDA7XG4gICNjdXJyZW50UmVzdWx0ID0gdm9pZCAwO1xuICAjY3VycmVudFJlc3VsdFN0YXRlO1xuICAjY3VycmVudFJlc3VsdE9wdGlvbnM7XG4gICNjdXJyZW50VGhlbmFibGU7XG4gICNzZWxlY3RFcnJvcjtcbiAgI3NlbGVjdEZuO1xuICAjc2VsZWN0UmVzdWx0O1xuICAvLyBUaGlzIHByb3BlcnR5IGtlZXBzIHRyYWNrIG9mIHRoZSBsYXN0IHF1ZXJ5IHdpdGggZGVmaW5lZCBkYXRhLlxuICAvLyBJdCB3aWxsIGJlIHVzZWQgdG8gcGFzcyB0aGUgcHJldmlvdXMgZGF0YSBhbmQgcXVlcnkgdG8gdGhlIHBsYWNlaG9sZGVyIGZ1bmN0aW9uIGJldHdlZW4gcmVuZGVycy5cbiAgI2xhc3RRdWVyeVdpdGhEZWZpbmVkRGF0YTtcbiAgI3N0YWxlVGltZW91dElkO1xuICAjcmVmZXRjaEludGVydmFsSWQ7XG4gICNjdXJyZW50UmVmZXRjaEludGVydmFsO1xuICAjdHJhY2tlZFByb3BzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbiAgYmluZE1ldGhvZHMoKSB7XG4gICAgdGhpcy5yZWZldGNoID0gdGhpcy5yZWZldGNoLmJpbmQodGhpcyk7XG4gIH1cbiAgb25TdWJzY3JpYmUoKSB7XG4gICAgaWYgKHRoaXMubGlzdGVuZXJzLnNpemUgPT09IDEpIHtcbiAgICAgIHRoaXMuI2N1cnJlbnRRdWVyeS5hZGRPYnNlcnZlcih0aGlzKTtcbiAgICAgIGlmIChzaG91bGRGZXRjaE9uTW91bnQodGhpcy4jY3VycmVudFF1ZXJ5LCB0aGlzLm9wdGlvbnMpKSB7XG4gICAgICAgIHRoaXMuI2V4ZWN1dGVGZXRjaCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy51cGRhdGVSZXN1bHQoKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuI3VwZGF0ZVRpbWVycygpO1xuICAgIH1cbiAgfVxuICBvblVuc3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5oYXNMaXN0ZW5lcnMoKSkge1xuICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgfVxuICB9XG4gIHNob3VsZEZldGNoT25SZWNvbm5lY3QoKSB7XG4gICAgcmV0dXJuIHNob3VsZEZldGNoT24oXG4gICAgICB0aGlzLiNjdXJyZW50UXVlcnksXG4gICAgICB0aGlzLm9wdGlvbnMsXG4gICAgICB0aGlzLm9wdGlvbnMucmVmZXRjaE9uUmVjb25uZWN0XG4gICAgKTtcbiAgfVxuICBzaG91bGRGZXRjaE9uV2luZG93Rm9jdXMoKSB7XG4gICAgcmV0dXJuIHNob3VsZEZldGNoT24oXG4gICAgICB0aGlzLiNjdXJyZW50UXVlcnksXG4gICAgICB0aGlzLm9wdGlvbnMsXG4gICAgICB0aGlzLm9wdGlvbnMucmVmZXRjaE9uV2luZG93Rm9jdXNcbiAgICApO1xuICB9XG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICAgIHRoaXMuI2NsZWFyU3RhbGVUaW1lb3V0KCk7XG4gICAgdGhpcy4jY2xlYXJSZWZldGNoSW50ZXJ2YWwoKTtcbiAgICB0aGlzLiNjdXJyZW50UXVlcnkucmVtb3ZlT2JzZXJ2ZXIodGhpcyk7XG4gIH1cbiAgc2V0T3B0aW9ucyhvcHRpb25zLCBub3RpZnlPcHRpb25zKSB7XG4gICAgY29uc3QgcHJldk9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG4gICAgY29uc3QgcHJldlF1ZXJ5ID0gdGhpcy4jY3VycmVudFF1ZXJ5O1xuICAgIHRoaXMub3B0aW9ucyA9IHRoaXMuI2NsaWVudC5kZWZhdWx0UXVlcnlPcHRpb25zKG9wdGlvbnMpO1xuICAgIGlmICh0aGlzLm9wdGlvbnMuZW5hYmxlZCAhPT0gdm9pZCAwICYmIHR5cGVvZiB0aGlzLm9wdGlvbnMuZW5hYmxlZCAhPT0gXCJib29sZWFuXCIgJiYgdHlwZW9mIHRoaXMub3B0aW9ucy5lbmFibGVkICE9PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIHJlc29sdmVFbmFibGVkKHRoaXMub3B0aW9ucy5lbmFibGVkLCB0aGlzLiNjdXJyZW50UXVlcnkpICE9PSBcImJvb2xlYW5cIikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIkV4cGVjdGVkIGVuYWJsZWQgdG8gYmUgYSBib29sZWFuIG9yIGEgY2FsbGJhY2sgdGhhdCByZXR1cm5zIGEgYm9vbGVhblwiXG4gICAgICApO1xuICAgIH1cbiAgICB0aGlzLiN1cGRhdGVRdWVyeSgpO1xuICAgIHRoaXMuI2N1cnJlbnRRdWVyeS5zZXRPcHRpb25zKHRoaXMub3B0aW9ucyk7XG4gICAgaWYgKHByZXZPcHRpb25zLl9kZWZhdWx0ZWQgJiYgIXNoYWxsb3dFcXVhbE9iamVjdHModGhpcy5vcHRpb25zLCBwcmV2T3B0aW9ucykpIHtcbiAgICAgIHRoaXMuI2NsaWVudC5nZXRRdWVyeUNhY2hlKCkubm90aWZ5KHtcbiAgICAgICAgdHlwZTogXCJvYnNlcnZlck9wdGlvbnNVcGRhdGVkXCIsXG4gICAgICAgIHF1ZXJ5OiB0aGlzLiNjdXJyZW50UXVlcnksXG4gICAgICAgIG9ic2VydmVyOiB0aGlzXG4gICAgICB9KTtcbiAgICB9XG4gICAgY29uc3QgbW91bnRlZCA9IHRoaXMuaGFzTGlzdGVuZXJzKCk7XG4gICAgaWYgKG1vdW50ZWQgJiYgc2hvdWxkRmV0Y2hPcHRpb25hbGx5KFxuICAgICAgdGhpcy4jY3VycmVudFF1ZXJ5LFxuICAgICAgcHJldlF1ZXJ5LFxuICAgICAgdGhpcy5vcHRpb25zLFxuICAgICAgcHJldk9wdGlvbnNcbiAgICApKSB7XG4gICAgICB0aGlzLiNleGVjdXRlRmV0Y2goKTtcbiAgICB9XG4gICAgdGhpcy51cGRhdGVSZXN1bHQobm90aWZ5T3B0aW9ucyk7XG4gICAgaWYgKG1vdW50ZWQgJiYgKHRoaXMuI2N1cnJlbnRRdWVyeSAhPT0gcHJldlF1ZXJ5IHx8IHJlc29sdmVFbmFibGVkKHRoaXMub3B0aW9ucy5lbmFibGVkLCB0aGlzLiNjdXJyZW50UXVlcnkpICE9PSByZXNvbHZlRW5hYmxlZChwcmV2T3B0aW9ucy5lbmFibGVkLCB0aGlzLiNjdXJyZW50UXVlcnkpIHx8IHJlc29sdmVTdGFsZVRpbWUodGhpcy5vcHRpb25zLnN0YWxlVGltZSwgdGhpcy4jY3VycmVudFF1ZXJ5KSAhPT0gcmVzb2x2ZVN0YWxlVGltZShwcmV2T3B0aW9ucy5zdGFsZVRpbWUsIHRoaXMuI2N1cnJlbnRRdWVyeSkpKSB7XG4gICAgICB0aGlzLiN1cGRhdGVTdGFsZVRpbWVvdXQoKTtcbiAgICB9XG4gICAgY29uc3QgbmV4dFJlZmV0Y2hJbnRlcnZhbCA9IHRoaXMuI2NvbXB1dGVSZWZldGNoSW50ZXJ2YWwoKTtcbiAgICBpZiAobW91bnRlZCAmJiAodGhpcy4jY3VycmVudFF1ZXJ5ICE9PSBwcmV2UXVlcnkgfHwgcmVzb2x2ZUVuYWJsZWQodGhpcy5vcHRpb25zLmVuYWJsZWQsIHRoaXMuI2N1cnJlbnRRdWVyeSkgIT09IHJlc29sdmVFbmFibGVkKHByZXZPcHRpb25zLmVuYWJsZWQsIHRoaXMuI2N1cnJlbnRRdWVyeSkgfHwgbmV4dFJlZmV0Y2hJbnRlcnZhbCAhPT0gdGhpcy4jY3VycmVudFJlZmV0Y2hJbnRlcnZhbCkpIHtcbiAgICAgIHRoaXMuI3VwZGF0ZVJlZmV0Y2hJbnRlcnZhbChuZXh0UmVmZXRjaEludGVydmFsKTtcbiAgICB9XG4gIH1cbiAgZ2V0T3B0aW1pc3RpY1Jlc3VsdChvcHRpb25zKSB7XG4gICAgY29uc3QgcXVlcnkgPSB0aGlzLiNjbGllbnQuZ2V0UXVlcnlDYWNoZSgpLmJ1aWxkKHRoaXMuI2NsaWVudCwgb3B0aW9ucyk7XG4gICAgY29uc3QgcmVzdWx0ID0gdGhpcy5jcmVhdGVSZXN1bHQocXVlcnksIG9wdGlvbnMpO1xuICAgIGlmIChzaG91bGRBc3NpZ25PYnNlcnZlckN1cnJlbnRQcm9wZXJ0aWVzKHRoaXMsIHJlc3VsdCkpIHtcbiAgICAgIHRoaXMuI2N1cnJlbnRSZXN1bHQgPSByZXN1bHQ7XG4gICAgICB0aGlzLiNjdXJyZW50UmVzdWx0T3B0aW9ucyA9IHRoaXMub3B0aW9ucztcbiAgICAgIHRoaXMuI2N1cnJlbnRSZXN1bHRTdGF0ZSA9IHRoaXMuI2N1cnJlbnRRdWVyeS5zdGF0ZTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuICBnZXRDdXJyZW50UmVzdWx0KCkge1xuICAgIHJldHVybiB0aGlzLiNjdXJyZW50UmVzdWx0O1xuICB9XG4gIHRyYWNrUmVzdWx0KHJlc3VsdCwgb25Qcm9wVHJhY2tlZCkge1xuICAgIGNvbnN0IHRyYWNrZWRSZXN1bHQgPSB7fTtcbiAgICBPYmplY3Qua2V5cyhyZXN1bHQpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRyYWNrZWRSZXN1bHQsIGtleSwge1xuICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6ICgpID0+IHtcbiAgICAgICAgICB0aGlzLnRyYWNrUHJvcChrZXkpO1xuICAgICAgICAgIG9uUHJvcFRyYWNrZWQ/LihrZXkpO1xuICAgICAgICAgIHJldHVybiByZXN1bHRba2V5XTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHRyYWNrZWRSZXN1bHQ7XG4gIH1cbiAgdHJhY2tQcm9wKGtleSkge1xuICAgIHRoaXMuI3RyYWNrZWRQcm9wcy5hZGQoa2V5KTtcbiAgfVxuICBnZXRDdXJyZW50UXVlcnkoKSB7XG4gICAgcmV0dXJuIHRoaXMuI2N1cnJlbnRRdWVyeTtcbiAgfVxuICByZWZldGNoKHsgLi4ub3B0aW9ucyB9ID0ge30pIHtcbiAgICByZXR1cm4gdGhpcy5mZXRjaCh7XG4gICAgICAuLi5vcHRpb25zXG4gICAgfSk7XG4gIH1cbiAgZmV0Y2hPcHRpbWlzdGljKG9wdGlvbnMpIHtcbiAgICBjb25zdCBkZWZhdWx0ZWRPcHRpb25zID0gdGhpcy4jY2xpZW50LmRlZmF1bHRRdWVyeU9wdGlvbnMob3B0aW9ucyk7XG4gICAgY29uc3QgcXVlcnkgPSB0aGlzLiNjbGllbnQuZ2V0UXVlcnlDYWNoZSgpLmJ1aWxkKHRoaXMuI2NsaWVudCwgZGVmYXVsdGVkT3B0aW9ucyk7XG4gICAgcmV0dXJuIHF1ZXJ5LmZldGNoKCkudGhlbigoKSA9PiB0aGlzLmNyZWF0ZVJlc3VsdChxdWVyeSwgZGVmYXVsdGVkT3B0aW9ucykpO1xuICB9XG4gIGZldGNoKGZldGNoT3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLiNleGVjdXRlRmV0Y2goe1xuICAgICAgLi4uZmV0Y2hPcHRpb25zLFxuICAgICAgY2FuY2VsUmVmZXRjaDogZmV0Y2hPcHRpb25zLmNhbmNlbFJlZmV0Y2ggPz8gdHJ1ZVxuICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgdGhpcy51cGRhdGVSZXN1bHQoKTtcbiAgICAgIHJldHVybiB0aGlzLiNjdXJyZW50UmVzdWx0O1xuICAgIH0pO1xuICB9XG4gICNleGVjdXRlRmV0Y2goZmV0Y2hPcHRpb25zKSB7XG4gICAgdGhpcy4jdXBkYXRlUXVlcnkoKTtcbiAgICBsZXQgcHJvbWlzZSA9IHRoaXMuI2N1cnJlbnRRdWVyeS5mZXRjaChcbiAgICAgIHRoaXMub3B0aW9ucyxcbiAgICAgIGZldGNoT3B0aW9uc1xuICAgICk7XG4gICAgaWYgKCFmZXRjaE9wdGlvbnM/LnRocm93T25FcnJvcikge1xuICAgICAgcHJvbWlzZSA9IHByb21pc2UuY2F0Y2gobm9vcCk7XG4gICAgfVxuICAgIHJldHVybiBwcm9taXNlO1xuICB9XG4gICN1cGRhdGVTdGFsZVRpbWVvdXQoKSB7XG4gICAgdGhpcy4jY2xlYXJTdGFsZVRpbWVvdXQoKTtcbiAgICBjb25zdCBzdGFsZVRpbWUgPSByZXNvbHZlU3RhbGVUaW1lKFxuICAgICAgdGhpcy5vcHRpb25zLnN0YWxlVGltZSxcbiAgICAgIHRoaXMuI2N1cnJlbnRRdWVyeVxuICAgICk7XG4gICAgaWYgKGlzU2VydmVyIHx8IHRoaXMuI2N1cnJlbnRSZXN1bHQuaXNTdGFsZSB8fCAhaXNWYWxpZFRpbWVvdXQoc3RhbGVUaW1lKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCB0aW1lID0gdGltZVVudGlsU3RhbGUodGhpcy4jY3VycmVudFJlc3VsdC5kYXRhVXBkYXRlZEF0LCBzdGFsZVRpbWUpO1xuICAgIGNvbnN0IHRpbWVvdXQgPSB0aW1lICsgMTtcbiAgICB0aGlzLiNzdGFsZVRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLiNjdXJyZW50UmVzdWx0LmlzU3RhbGUpIHtcbiAgICAgICAgdGhpcy51cGRhdGVSZXN1bHQoKTtcbiAgICAgIH1cbiAgICB9LCB0aW1lb3V0KTtcbiAgfVxuICAjY29tcHV0ZVJlZmV0Y2hJbnRlcnZhbCgpIHtcbiAgICByZXR1cm4gKHR5cGVvZiB0aGlzLm9wdGlvbnMucmVmZXRjaEludGVydmFsID09PSBcImZ1bmN0aW9uXCIgPyB0aGlzLm9wdGlvbnMucmVmZXRjaEludGVydmFsKHRoaXMuI2N1cnJlbnRRdWVyeSkgOiB0aGlzLm9wdGlvbnMucmVmZXRjaEludGVydmFsKSA/PyBmYWxzZTtcbiAgfVxuICAjdXBkYXRlUmVmZXRjaEludGVydmFsKG5leHRJbnRlcnZhbCkge1xuICAgIHRoaXMuI2NsZWFyUmVmZXRjaEludGVydmFsKCk7XG4gICAgdGhpcy4jY3VycmVudFJlZmV0Y2hJbnRlcnZhbCA9IG5leHRJbnRlcnZhbDtcbiAgICBpZiAoaXNTZXJ2ZXIgfHwgcmVzb2x2ZUVuYWJsZWQodGhpcy5vcHRpb25zLmVuYWJsZWQsIHRoaXMuI2N1cnJlbnRRdWVyeSkgPT09IGZhbHNlIHx8ICFpc1ZhbGlkVGltZW91dCh0aGlzLiNjdXJyZW50UmVmZXRjaEludGVydmFsKSB8fCB0aGlzLiNjdXJyZW50UmVmZXRjaEludGVydmFsID09PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuI3JlZmV0Y2hJbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5yZWZldGNoSW50ZXJ2YWxJbkJhY2tncm91bmQgfHwgZm9jdXNNYW5hZ2VyLmlzRm9jdXNlZCgpKSB7XG4gICAgICAgIHRoaXMuI2V4ZWN1dGVGZXRjaCgpO1xuICAgICAgfVxuICAgIH0sIHRoaXMuI2N1cnJlbnRSZWZldGNoSW50ZXJ2YWwpO1xuICB9XG4gICN1cGRhdGVUaW1lcnMoKSB7XG4gICAgdGhpcy4jdXBkYXRlU3RhbGVUaW1lb3V0KCk7XG4gICAgdGhpcy4jdXBkYXRlUmVmZXRjaEludGVydmFsKHRoaXMuI2NvbXB1dGVSZWZldGNoSW50ZXJ2YWwoKSk7XG4gIH1cbiAgI2NsZWFyU3RhbGVUaW1lb3V0KCkge1xuICAgIGlmICh0aGlzLiNzdGFsZVRpbWVvdXRJZCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuI3N0YWxlVGltZW91dElkKTtcbiAgICAgIHRoaXMuI3N0YWxlVGltZW91dElkID0gdm9pZCAwO1xuICAgIH1cbiAgfVxuICAjY2xlYXJSZWZldGNoSW50ZXJ2YWwoKSB7XG4gICAgaWYgKHRoaXMuI3JlZmV0Y2hJbnRlcnZhbElkKSB7XG4gICAgICBjbGVhckludGVydmFsKHRoaXMuI3JlZmV0Y2hJbnRlcnZhbElkKTtcbiAgICAgIHRoaXMuI3JlZmV0Y2hJbnRlcnZhbElkID0gdm9pZCAwO1xuICAgIH1cbiAgfVxuICBjcmVhdGVSZXN1bHQocXVlcnksIG9wdGlvbnMpIHtcbiAgICBjb25zdCBwcmV2UXVlcnkgPSB0aGlzLiNjdXJyZW50UXVlcnk7XG4gICAgY29uc3QgcHJldk9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG4gICAgY29uc3QgcHJldlJlc3VsdCA9IHRoaXMuI2N1cnJlbnRSZXN1bHQ7XG4gICAgY29uc3QgcHJldlJlc3VsdFN0YXRlID0gdGhpcy4jY3VycmVudFJlc3VsdFN0YXRlO1xuICAgIGNvbnN0IHByZXZSZXN1bHRPcHRpb25zID0gdGhpcy4jY3VycmVudFJlc3VsdE9wdGlvbnM7XG4gICAgY29uc3QgcXVlcnlDaGFuZ2UgPSBxdWVyeSAhPT0gcHJldlF1ZXJ5O1xuICAgIGNvbnN0IHF1ZXJ5SW5pdGlhbFN0YXRlID0gcXVlcnlDaGFuZ2UgPyBxdWVyeS5zdGF0ZSA6IHRoaXMuI2N1cnJlbnRRdWVyeUluaXRpYWxTdGF0ZTtcbiAgICBjb25zdCB7IHN0YXRlIH0gPSBxdWVyeTtcbiAgICBsZXQgbmV3U3RhdGUgPSB7IC4uLnN0YXRlIH07XG4gICAgbGV0IGlzUGxhY2Vob2xkZXJEYXRhID0gZmFsc2U7XG4gICAgbGV0IGRhdGE7XG4gICAgaWYgKG9wdGlvbnMuX29wdGltaXN0aWNSZXN1bHRzKSB7XG4gICAgICBjb25zdCBtb3VudGVkID0gdGhpcy5oYXNMaXN0ZW5lcnMoKTtcbiAgICAgIGNvbnN0IGZldGNoT25Nb3VudCA9ICFtb3VudGVkICYmIHNob3VsZEZldGNoT25Nb3VudChxdWVyeSwgb3B0aW9ucyk7XG4gICAgICBjb25zdCBmZXRjaE9wdGlvbmFsbHkgPSBtb3VudGVkICYmIHNob3VsZEZldGNoT3B0aW9uYWxseShxdWVyeSwgcHJldlF1ZXJ5LCBvcHRpb25zLCBwcmV2T3B0aW9ucyk7XG4gICAgICBpZiAoZmV0Y2hPbk1vdW50IHx8IGZldGNoT3B0aW9uYWxseSkge1xuICAgICAgICBuZXdTdGF0ZSA9IHtcbiAgICAgICAgICAuLi5uZXdTdGF0ZSxcbiAgICAgICAgICAuLi5mZXRjaFN0YXRlKHN0YXRlLmRhdGEsIHF1ZXJ5Lm9wdGlvbnMpXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICBpZiAob3B0aW9ucy5fb3B0aW1pc3RpY1Jlc3VsdHMgPT09IFwiaXNSZXN0b3JpbmdcIikge1xuICAgICAgICBuZXdTdGF0ZS5mZXRjaFN0YXR1cyA9IFwiaWRsZVwiO1xuICAgICAgfVxuICAgIH1cbiAgICBsZXQgeyBlcnJvciwgZXJyb3JVcGRhdGVkQXQsIHN0YXR1cyB9ID0gbmV3U3RhdGU7XG4gICAgaWYgKG9wdGlvbnMuc2VsZWN0ICYmIG5ld1N0YXRlLmRhdGEgIT09IHZvaWQgMCkge1xuICAgICAgaWYgKHByZXZSZXN1bHQgJiYgbmV3U3RhdGUuZGF0YSA9PT0gcHJldlJlc3VsdFN0YXRlPy5kYXRhICYmIG9wdGlvbnMuc2VsZWN0ID09PSB0aGlzLiNzZWxlY3RGbikge1xuICAgICAgICBkYXRhID0gdGhpcy4jc2VsZWN0UmVzdWx0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB0aGlzLiNzZWxlY3RGbiA9IG9wdGlvbnMuc2VsZWN0O1xuICAgICAgICAgIGRhdGEgPSBvcHRpb25zLnNlbGVjdChuZXdTdGF0ZS5kYXRhKTtcbiAgICAgICAgICBkYXRhID0gcmVwbGFjZURhdGEocHJldlJlc3VsdD8uZGF0YSwgZGF0YSwgb3B0aW9ucyk7XG4gICAgICAgICAgdGhpcy4jc2VsZWN0UmVzdWx0ID0gZGF0YTtcbiAgICAgICAgICB0aGlzLiNzZWxlY3RFcnJvciA9IG51bGw7XG4gICAgICAgIH0gY2F0Y2ggKHNlbGVjdEVycm9yKSB7XG4gICAgICAgICAgdGhpcy4jc2VsZWN0RXJyb3IgPSBzZWxlY3RFcnJvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBkYXRhID0gbmV3U3RhdGUuZGF0YTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMucGxhY2Vob2xkZXJEYXRhICE9PSB2b2lkIDAgJiYgZGF0YSA9PT0gdm9pZCAwICYmIHN0YXR1cyA9PT0gXCJwZW5kaW5nXCIpIHtcbiAgICAgIGxldCBwbGFjZWhvbGRlckRhdGE7XG4gICAgICBpZiAocHJldlJlc3VsdD8uaXNQbGFjZWhvbGRlckRhdGEgJiYgb3B0aW9ucy5wbGFjZWhvbGRlckRhdGEgPT09IHByZXZSZXN1bHRPcHRpb25zPy5wbGFjZWhvbGRlckRhdGEpIHtcbiAgICAgICAgcGxhY2Vob2xkZXJEYXRhID0gcHJldlJlc3VsdC5kYXRhO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGxhY2Vob2xkZXJEYXRhID0gdHlwZW9mIG9wdGlvbnMucGxhY2Vob2xkZXJEYXRhID09PSBcImZ1bmN0aW9uXCIgPyBvcHRpb25zLnBsYWNlaG9sZGVyRGF0YShcbiAgICAgICAgICB0aGlzLiNsYXN0UXVlcnlXaXRoRGVmaW5lZERhdGE/LnN0YXRlLmRhdGEsXG4gICAgICAgICAgdGhpcy4jbGFzdFF1ZXJ5V2l0aERlZmluZWREYXRhXG4gICAgICAgICkgOiBvcHRpb25zLnBsYWNlaG9sZGVyRGF0YTtcbiAgICAgICAgaWYgKG9wdGlvbnMuc2VsZWN0ICYmIHBsYWNlaG9sZGVyRGF0YSAhPT0gdm9pZCAwKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyRGF0YSA9IG9wdGlvbnMuc2VsZWN0KHBsYWNlaG9sZGVyRGF0YSk7XG4gICAgICAgICAgICB0aGlzLiNzZWxlY3RFcnJvciA9IG51bGw7XG4gICAgICAgICAgfSBjYXRjaCAoc2VsZWN0RXJyb3IpIHtcbiAgICAgICAgICAgIHRoaXMuI3NlbGVjdEVycm9yID0gc2VsZWN0RXJyb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAocGxhY2Vob2xkZXJEYXRhICE9PSB2b2lkIDApIHtcbiAgICAgICAgc3RhdHVzID0gXCJzdWNjZXNzXCI7XG4gICAgICAgIGRhdGEgPSByZXBsYWNlRGF0YShcbiAgICAgICAgICBwcmV2UmVzdWx0Py5kYXRhLFxuICAgICAgICAgIHBsYWNlaG9sZGVyRGF0YSxcbiAgICAgICAgICBvcHRpb25zXG4gICAgICAgICk7XG4gICAgICAgIGlzUGxhY2Vob2xkZXJEYXRhID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHRoaXMuI3NlbGVjdEVycm9yKSB7XG4gICAgICBlcnJvciA9IHRoaXMuI3NlbGVjdEVycm9yO1xuICAgICAgZGF0YSA9IHRoaXMuI3NlbGVjdFJlc3VsdDtcbiAgICAgIGVycm9yVXBkYXRlZEF0ID0gRGF0ZS5ub3coKTtcbiAgICAgIHN0YXR1cyA9IFwiZXJyb3JcIjtcbiAgICB9XG4gICAgY29uc3QgaXNGZXRjaGluZyA9IG5ld1N0YXRlLmZldGNoU3RhdHVzID09PSBcImZldGNoaW5nXCI7XG4gICAgY29uc3QgaXNQZW5kaW5nID0gc3RhdHVzID09PSBcInBlbmRpbmdcIjtcbiAgICBjb25zdCBpc0Vycm9yID0gc3RhdHVzID09PSBcImVycm9yXCI7XG4gICAgY29uc3QgaXNMb2FkaW5nID0gaXNQZW5kaW5nICYmIGlzRmV0Y2hpbmc7XG4gICAgY29uc3QgaGFzRGF0YSA9IGRhdGEgIT09IHZvaWQgMDtcbiAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICBzdGF0dXMsXG4gICAgICBmZXRjaFN0YXR1czogbmV3U3RhdGUuZmV0Y2hTdGF0dXMsXG4gICAgICBpc1BlbmRpbmcsXG4gICAgICBpc1N1Y2Nlc3M6IHN0YXR1cyA9PT0gXCJzdWNjZXNzXCIsXG4gICAgICBpc0Vycm9yLFxuICAgICAgaXNJbml0aWFsTG9hZGluZzogaXNMb2FkaW5nLFxuICAgICAgaXNMb2FkaW5nLFxuICAgICAgZGF0YSxcbiAgICAgIGRhdGFVcGRhdGVkQXQ6IG5ld1N0YXRlLmRhdGFVcGRhdGVkQXQsXG4gICAgICBlcnJvcixcbiAgICAgIGVycm9yVXBkYXRlZEF0LFxuICAgICAgZmFpbHVyZUNvdW50OiBuZXdTdGF0ZS5mZXRjaEZhaWx1cmVDb3VudCxcbiAgICAgIGZhaWx1cmVSZWFzb246IG5ld1N0YXRlLmZldGNoRmFpbHVyZVJlYXNvbixcbiAgICAgIGVycm9yVXBkYXRlQ291bnQ6IG5ld1N0YXRlLmVycm9yVXBkYXRlQ291bnQsXG4gICAgICBpc0ZldGNoZWQ6IG5ld1N0YXRlLmRhdGFVcGRhdGVDb3VudCA+IDAgfHwgbmV3U3RhdGUuZXJyb3JVcGRhdGVDb3VudCA+IDAsXG4gICAgICBpc0ZldGNoZWRBZnRlck1vdW50OiBuZXdTdGF0ZS5kYXRhVXBkYXRlQ291bnQgPiBxdWVyeUluaXRpYWxTdGF0ZS5kYXRhVXBkYXRlQ291bnQgfHwgbmV3U3RhdGUuZXJyb3JVcGRhdGVDb3VudCA+IHF1ZXJ5SW5pdGlhbFN0YXRlLmVycm9yVXBkYXRlQ291bnQsXG4gICAgICBpc0ZldGNoaW5nLFxuICAgICAgaXNSZWZldGNoaW5nOiBpc0ZldGNoaW5nICYmICFpc1BlbmRpbmcsXG4gICAgICBpc0xvYWRpbmdFcnJvcjogaXNFcnJvciAmJiAhaGFzRGF0YSxcbiAgICAgIGlzUGF1c2VkOiBuZXdTdGF0ZS5mZXRjaFN0YXR1cyA9PT0gXCJwYXVzZWRcIixcbiAgICAgIGlzUGxhY2Vob2xkZXJEYXRhLFxuICAgICAgaXNSZWZldGNoRXJyb3I6IGlzRXJyb3IgJiYgaGFzRGF0YSxcbiAgICAgIGlzU3RhbGU6IGlzU3RhbGUocXVlcnksIG9wdGlvbnMpLFxuICAgICAgcmVmZXRjaDogdGhpcy5yZWZldGNoLFxuICAgICAgcHJvbWlzZTogdGhpcy4jY3VycmVudFRoZW5hYmxlXG4gICAgfTtcbiAgICBjb25zdCBuZXh0UmVzdWx0ID0gcmVzdWx0O1xuICAgIGlmICh0aGlzLm9wdGlvbnMuZXhwZXJpbWVudGFsX3ByZWZldGNoSW5SZW5kZXIpIHtcbiAgICAgIGNvbnN0IGZpbmFsaXplVGhlbmFibGVJZlBvc3NpYmxlID0gKHRoZW5hYmxlKSA9PiB7XG4gICAgICAgIGlmIChuZXh0UmVzdWx0LnN0YXR1cyA9PT0gXCJlcnJvclwiKSB7XG4gICAgICAgICAgdGhlbmFibGUucmVqZWN0KG5leHRSZXN1bHQuZXJyb3IpO1xuICAgICAgICB9IGVsc2UgaWYgKG5leHRSZXN1bHQuZGF0YSAhPT0gdm9pZCAwKSB7XG4gICAgICAgICAgdGhlbmFibGUucmVzb2x2ZShuZXh0UmVzdWx0LmRhdGEpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgY29uc3QgcmVjcmVhdGVUaGVuYWJsZSA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgcGVuZGluZyA9IHRoaXMuI2N1cnJlbnRUaGVuYWJsZSA9IG5leHRSZXN1bHQucHJvbWlzZSA9IHBlbmRpbmdUaGVuYWJsZSgpO1xuICAgICAgICBmaW5hbGl6ZVRoZW5hYmxlSWZQb3NzaWJsZShwZW5kaW5nKTtcbiAgICAgIH07XG4gICAgICBjb25zdCBwcmV2VGhlbmFibGUgPSB0aGlzLiNjdXJyZW50VGhlbmFibGU7XG4gICAgICBzd2l0Y2ggKHByZXZUaGVuYWJsZS5zdGF0dXMpIHtcbiAgICAgICAgY2FzZSBcInBlbmRpbmdcIjpcbiAgICAgICAgICBpZiAocXVlcnkucXVlcnlIYXNoID09PSBwcmV2UXVlcnkucXVlcnlIYXNoKSB7XG4gICAgICAgICAgICBmaW5hbGl6ZVRoZW5hYmxlSWZQb3NzaWJsZShwcmV2VGhlbmFibGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImZ1bGZpbGxlZFwiOlxuICAgICAgICAgIGlmIChuZXh0UmVzdWx0LnN0YXR1cyA9PT0gXCJlcnJvclwiIHx8IG5leHRSZXN1bHQuZGF0YSAhPT0gcHJldlRoZW5hYmxlLnZhbHVlKSB7XG4gICAgICAgICAgICByZWNyZWF0ZVRoZW5hYmxlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwicmVqZWN0ZWRcIjpcbiAgICAgICAgICBpZiAobmV4dFJlc3VsdC5zdGF0dXMgIT09IFwiZXJyb3JcIiB8fCBuZXh0UmVzdWx0LmVycm9yICE9PSBwcmV2VGhlbmFibGUucmVhc29uKSB7XG4gICAgICAgICAgICByZWNyZWF0ZVRoZW5hYmxlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV4dFJlc3VsdDtcbiAgfVxuICB1cGRhdGVSZXN1bHQobm90aWZ5T3B0aW9ucykge1xuICAgIGNvbnN0IHByZXZSZXN1bHQgPSB0aGlzLiNjdXJyZW50UmVzdWx0O1xuICAgIGNvbnN0IG5leHRSZXN1bHQgPSB0aGlzLmNyZWF0ZVJlc3VsdCh0aGlzLiNjdXJyZW50UXVlcnksIHRoaXMub3B0aW9ucyk7XG4gICAgdGhpcy4jY3VycmVudFJlc3VsdFN0YXRlID0gdGhpcy4jY3VycmVudFF1ZXJ5LnN0YXRlO1xuICAgIHRoaXMuI2N1cnJlbnRSZXN1bHRPcHRpb25zID0gdGhpcy5vcHRpb25zO1xuICAgIGlmICh0aGlzLiNjdXJyZW50UmVzdWx0U3RhdGUuZGF0YSAhPT0gdm9pZCAwKSB7XG4gICAgICB0aGlzLiNsYXN0UXVlcnlXaXRoRGVmaW5lZERhdGEgPSB0aGlzLiNjdXJyZW50UXVlcnk7XG4gICAgfVxuICAgIGlmIChzaGFsbG93RXF1YWxPYmplY3RzKG5leHRSZXN1bHQsIHByZXZSZXN1bHQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuI2N1cnJlbnRSZXN1bHQgPSBuZXh0UmVzdWx0O1xuICAgIGNvbnN0IGRlZmF1bHROb3RpZnlPcHRpb25zID0ge307XG4gICAgY29uc3Qgc2hvdWxkTm90aWZ5TGlzdGVuZXJzID0gKCkgPT4ge1xuICAgICAgaWYgKCFwcmV2UmVzdWx0KSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgICAgY29uc3QgeyBub3RpZnlPbkNoYW5nZVByb3BzIH0gPSB0aGlzLm9wdGlvbnM7XG4gICAgICBjb25zdCBub3RpZnlPbkNoYW5nZVByb3BzVmFsdWUgPSB0eXBlb2Ygbm90aWZ5T25DaGFuZ2VQcm9wcyA9PT0gXCJmdW5jdGlvblwiID8gbm90aWZ5T25DaGFuZ2VQcm9wcygpIDogbm90aWZ5T25DaGFuZ2VQcm9wcztcbiAgICAgIGlmIChub3RpZnlPbkNoYW5nZVByb3BzVmFsdWUgPT09IFwiYWxsXCIgfHwgIW5vdGlmeU9uQ2hhbmdlUHJvcHNWYWx1ZSAmJiAhdGhpcy4jdHJhY2tlZFByb3BzLnNpemUpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBjb25zdCBpbmNsdWRlZFByb3BzID0gbmV3IFNldChcbiAgICAgICAgbm90aWZ5T25DaGFuZ2VQcm9wc1ZhbHVlID8/IHRoaXMuI3RyYWNrZWRQcm9wc1xuICAgICAgKTtcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMudGhyb3dPbkVycm9yKSB7XG4gICAgICAgIGluY2x1ZGVkUHJvcHMuYWRkKFwiZXJyb3JcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy4jY3VycmVudFJlc3VsdCkuc29tZSgoa2V5KSA9PiB7XG4gICAgICAgIGNvbnN0IHR5cGVkS2V5ID0ga2V5O1xuICAgICAgICBjb25zdCBjaGFuZ2VkID0gdGhpcy4jY3VycmVudFJlc3VsdFt0eXBlZEtleV0gIT09IHByZXZSZXN1bHRbdHlwZWRLZXldO1xuICAgICAgICByZXR1cm4gY2hhbmdlZCAmJiBpbmNsdWRlZFByb3BzLmhhcyh0eXBlZEtleSk7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIGlmIChub3RpZnlPcHRpb25zPy5saXN0ZW5lcnMgIT09IGZhbHNlICYmIHNob3VsZE5vdGlmeUxpc3RlbmVycygpKSB7XG4gICAgICBkZWZhdWx0Tm90aWZ5T3B0aW9ucy5saXN0ZW5lcnMgPSB0cnVlO1xuICAgIH1cbiAgICB0aGlzLiNub3RpZnkoeyAuLi5kZWZhdWx0Tm90aWZ5T3B0aW9ucywgLi4ubm90aWZ5T3B0aW9ucyB9KTtcbiAgfVxuICAjdXBkYXRlUXVlcnkoKSB7XG4gICAgY29uc3QgcXVlcnkgPSB0aGlzLiNjbGllbnQuZ2V0UXVlcnlDYWNoZSgpLmJ1aWxkKHRoaXMuI2NsaWVudCwgdGhpcy5vcHRpb25zKTtcbiAgICBpZiAocXVlcnkgPT09IHRoaXMuI2N1cnJlbnRRdWVyeSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBwcmV2UXVlcnkgPSB0aGlzLiNjdXJyZW50UXVlcnk7XG4gICAgdGhpcy4jY3VycmVudFF1ZXJ5ID0gcXVlcnk7XG4gICAgdGhpcy4jY3VycmVudFF1ZXJ5SW5pdGlhbFN0YXRlID0gcXVlcnkuc3RhdGU7XG4gICAgaWYgKHRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcbiAgICAgIHByZXZRdWVyeT8ucmVtb3ZlT2JzZXJ2ZXIodGhpcyk7XG4gICAgICBxdWVyeS5hZGRPYnNlcnZlcih0aGlzKTtcbiAgICB9XG4gIH1cbiAgb25RdWVyeVVwZGF0ZSgpIHtcbiAgICB0aGlzLnVwZGF0ZVJlc3VsdCgpO1xuICAgIGlmICh0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICB0aGlzLiN1cGRhdGVUaW1lcnMoKTtcbiAgICB9XG4gIH1cbiAgI25vdGlmeShub3RpZnlPcHRpb25zKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICBpZiAobm90aWZ5T3B0aW9ucy5saXN0ZW5lcnMpIHtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IHtcbiAgICAgICAgICBsaXN0ZW5lcih0aGlzLiNjdXJyZW50UmVzdWx0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICB0aGlzLiNjbGllbnQuZ2V0UXVlcnlDYWNoZSgpLm5vdGlmeSh7XG4gICAgICAgIHF1ZXJ5OiB0aGlzLiNjdXJyZW50UXVlcnksXG4gICAgICAgIHR5cGU6IFwib2JzZXJ2ZXJSZXN1bHRzVXBkYXRlZFwiXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufTtcbmZ1bmN0aW9uIHNob3VsZExvYWRPbk1vdW50KHF1ZXJ5LCBvcHRpb25zKSB7XG4gIHJldHVybiByZXNvbHZlRW5hYmxlZChvcHRpb25zLmVuYWJsZWQsIHF1ZXJ5KSAhPT0gZmFsc2UgJiYgcXVlcnkuc3RhdGUuZGF0YSA9PT0gdm9pZCAwICYmICEocXVlcnkuc3RhdGUuc3RhdHVzID09PSBcImVycm9yXCIgJiYgb3B0aW9ucy5yZXRyeU9uTW91bnQgPT09IGZhbHNlKTtcbn1cbmZ1bmN0aW9uIHNob3VsZEZldGNoT25Nb3VudChxdWVyeSwgb3B0aW9ucykge1xuICByZXR1cm4gc2hvdWxkTG9hZE9uTW91bnQocXVlcnksIG9wdGlvbnMpIHx8IHF1ZXJ5LnN0YXRlLmRhdGEgIT09IHZvaWQgMCAmJiBzaG91bGRGZXRjaE9uKHF1ZXJ5LCBvcHRpb25zLCBvcHRpb25zLnJlZmV0Y2hPbk1vdW50KTtcbn1cbmZ1bmN0aW9uIHNob3VsZEZldGNoT24ocXVlcnksIG9wdGlvbnMsIGZpZWxkKSB7XG4gIGlmIChyZXNvbHZlRW5hYmxlZChvcHRpb25zLmVuYWJsZWQsIHF1ZXJ5KSAhPT0gZmFsc2UpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHR5cGVvZiBmaWVsZCA9PT0gXCJmdW5jdGlvblwiID8gZmllbGQocXVlcnkpIDogZmllbGQ7XG4gICAgcmV0dXJuIHZhbHVlID09PSBcImFsd2F5c1wiIHx8IHZhbHVlICE9PSBmYWxzZSAmJiBpc1N0YWxlKHF1ZXJ5LCBvcHRpb25zKTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5mdW5jdGlvbiBzaG91bGRGZXRjaE9wdGlvbmFsbHkocXVlcnksIHByZXZRdWVyeSwgb3B0aW9ucywgcHJldk9wdGlvbnMpIHtcbiAgcmV0dXJuIChxdWVyeSAhPT0gcHJldlF1ZXJ5IHx8IHJlc29sdmVFbmFibGVkKHByZXZPcHRpb25zLmVuYWJsZWQsIHF1ZXJ5KSA9PT0gZmFsc2UpICYmICghb3B0aW9ucy5zdXNwZW5zZSB8fCBxdWVyeS5zdGF0ZS5zdGF0dXMgIT09IFwiZXJyb3JcIikgJiYgaXNTdGFsZShxdWVyeSwgb3B0aW9ucyk7XG59XG5mdW5jdGlvbiBpc1N0YWxlKHF1ZXJ5LCBvcHRpb25zKSB7XG4gIHJldHVybiByZXNvbHZlRW5hYmxlZChvcHRpb25zLmVuYWJsZWQsIHF1ZXJ5KSAhPT0gZmFsc2UgJiYgcXVlcnkuaXNTdGFsZUJ5VGltZShyZXNvbHZlU3RhbGVUaW1lKG9wdGlvbnMuc3RhbGVUaW1lLCBxdWVyeSkpO1xufVxuZnVuY3Rpb24gc2hvdWxkQXNzaWduT2JzZXJ2ZXJDdXJyZW50UHJvcGVydGllcyhvYnNlcnZlciwgb3B0aW1pc3RpY1Jlc3VsdCkge1xuICBpZiAoIXNoYWxsb3dFcXVhbE9iamVjdHMob2JzZXJ2ZXIuZ2V0Q3VycmVudFJlc3VsdCgpLCBvcHRpbWlzdGljUmVzdWx0KSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydCB7XG4gIFF1ZXJ5T2JzZXJ2ZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeU9ic2VydmVyLmpzLm1hcCJdLCJuYW1lcyI6WyJmb2N1c01hbmFnZXIiLCJub3RpZnlNYW5hZ2VyIiwiZmV0Y2hTdGF0ZSIsIlN1YnNjcmliYWJsZSIsInBlbmRpbmdUaGVuYWJsZSIsImlzU2VydmVyIiwiaXNWYWxpZFRpbWVvdXQiLCJub29wIiwicmVwbGFjZURhdGEiLCJyZXNvbHZlRW5hYmxlZCIsInJlc29sdmVTdGFsZVRpbWUiLCJzaGFsbG93RXF1YWxPYmplY3RzIiwidGltZVVudGlsU3RhbGUiLCJRdWVyeU9ic2VydmVyIiwiY29uc3RydWN0b3IiLCJjbGllbnQiLCJvcHRpb25zIiwic2VsZWN0RXJyb3IiLCJjdXJyZW50VGhlbmFibGUiLCJleHBlcmltZW50YWxfcHJlZmV0Y2hJblJlbmRlciIsInJlamVjdCIsIkVycm9yIiwiYmluZE1ldGhvZHMiLCJzZXRPcHRpb25zIiwiY3VycmVudFF1ZXJ5IiwiY3VycmVudFF1ZXJ5SW5pdGlhbFN0YXRlIiwiY3VycmVudFJlc3VsdCIsImN1cnJlbnRSZXN1bHRTdGF0ZSIsImN1cnJlbnRSZXN1bHRPcHRpb25zIiwic2VsZWN0Rm4iLCJzZWxlY3RSZXN1bHQiLCJsYXN0UXVlcnlXaXRoRGVmaW5lZERhdGEiLCJzdGFsZVRpbWVvdXRJZCIsInJlZmV0Y2hJbnRlcnZhbElkIiwiY3VycmVudFJlZmV0Y2hJbnRlcnZhbCIsInRyYWNrZWRQcm9wcyIsIlNldCIsInJlZmV0Y2giLCJiaW5kIiwib25TdWJzY3JpYmUiLCJsaXN0ZW5lcnMiLCJzaXplIiwiYWRkT2JzZXJ2ZXIiLCJzaG91bGRGZXRjaE9uTW91bnQiLCJleGVjdXRlRmV0Y2giLCJ1cGRhdGVSZXN1bHQiLCJ1cGRhdGVUaW1lcnMiLCJvblVuc3Vic2NyaWJlIiwiaGFzTGlzdGVuZXJzIiwiZGVzdHJveSIsInNob3VsZEZldGNoT25SZWNvbm5lY3QiLCJzaG91bGRGZXRjaE9uIiwicmVmZXRjaE9uUmVjb25uZWN0Iiwic2hvdWxkRmV0Y2hPbldpbmRvd0ZvY3VzIiwicmVmZXRjaE9uV2luZG93Rm9jdXMiLCJjbGVhclN0YWxlVGltZW91dCIsImNsZWFyUmVmZXRjaEludGVydmFsIiwicmVtb3ZlT2JzZXJ2ZXIiLCJub3RpZnlPcHRpb25zIiwicHJldk9wdGlvbnMiLCJwcmV2UXVlcnkiLCJkZWZhdWx0UXVlcnlPcHRpb25zIiwiZW5hYmxlZCIsInVwZGF0ZVF1ZXJ5IiwiX2RlZmF1bHRlZCIsImdldFF1ZXJ5Q2FjaGUiLCJub3RpZnkiLCJ0eXBlIiwicXVlcnkiLCJvYnNlcnZlciIsIm1vdW50ZWQiLCJzaG91bGRGZXRjaE9wdGlvbmFsbHkiLCJzdGFsZVRpbWUiLCJ1cGRhdGVTdGFsZVRpbWVvdXQiLCJuZXh0UmVmZXRjaEludGVydmFsIiwiY29tcHV0ZVJlZmV0Y2hJbnRlcnZhbCIsInVwZGF0ZVJlZmV0Y2hJbnRlcnZhbCIsImdldE9wdGltaXN0aWNSZXN1bHQiLCJidWlsZCIsInJlc3VsdCIsImNyZWF0ZVJlc3VsdCIsInNob3VsZEFzc2lnbk9ic2VydmVyQ3VycmVudFByb3BlcnRpZXMiLCJzdGF0ZSIsImdldEN1cnJlbnRSZXN1bHQiLCJ0cmFja1Jlc3VsdCIsIm9uUHJvcFRyYWNrZWQiLCJ0cmFja2VkUmVzdWx0IiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJrZXkiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJ0cmFja1Byb3AiLCJhZGQiLCJnZXRDdXJyZW50UXVlcnkiLCJfcmVmIiwiYXNzaWduIiwiX29iamVjdERlc3RydWN0dXJpbmdFbXB0eSIsImZldGNoIiwiX29iamVjdFNwcmVhZCIsImZldGNoT3B0aW1pc3RpYyIsImRlZmF1bHRlZE9wdGlvbnMiLCJ0aGVuIiwiZmV0Y2hPcHRpb25zIiwiY2FuY2VsUmVmZXRjaCIsIiNleGVjdXRlRmV0Y2giLCJwcm9taXNlIiwidGhyb3dPbkVycm9yIiwiY2F0Y2giLCIjdXBkYXRlU3RhbGVUaW1lb3V0IiwiaXNTdGFsZSIsInRpbWUiLCJkYXRhVXBkYXRlZEF0IiwidGltZW91dCIsInNldFRpbWVvdXQiLCIjY29tcHV0ZVJlZmV0Y2hJbnRlcnZhbCIsInJlZmV0Y2hJbnRlcnZhbCIsIiN1cGRhdGVSZWZldGNoSW50ZXJ2YWwiLCJuZXh0SW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsInJlZmV0Y2hJbnRlcnZhbEluQmFja2dyb3VuZCIsImlzRm9jdXNlZCIsIiN1cGRhdGVUaW1lcnMiLCIjY2xlYXJTdGFsZVRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCIjY2xlYXJSZWZldGNoSW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwicHJldlJlc3VsdCIsInByZXZSZXN1bHRTdGF0ZSIsInByZXZSZXN1bHRPcHRpb25zIiwicXVlcnlDaGFuZ2UiLCJxdWVyeUluaXRpYWxTdGF0ZSIsIm5ld1N0YXRlIiwiaXNQbGFjZWhvbGRlckRhdGEiLCJkYXRhIiwiX29wdGltaXN0aWNSZXN1bHRzIiwiZmV0Y2hPbk1vdW50IiwiZmV0Y2hPcHRpb25hbGx5IiwiZmV0Y2hTdGF0dXMiLCJlcnJvciIsImVycm9yVXBkYXRlZEF0Iiwic3RhdHVzIiwic2VsZWN0IiwicGxhY2Vob2xkZXJEYXRhIiwiRGF0ZSIsIm5vdyIsImlzRmV0Y2hpbmciLCJpc1BlbmRpbmciLCJpc0Vycm9yIiwiaXNMb2FkaW5nIiwiaGFzRGF0YSIsImlzU3VjY2VzcyIsImlzSW5pdGlhbExvYWRpbmciLCJmYWlsdXJlQ291bnQiLCJmZXRjaEZhaWx1cmVDb3VudCIsImZhaWx1cmVSZWFzb24iLCJmZXRjaEZhaWx1cmVSZWFzb24iLCJlcnJvclVwZGF0ZUNvdW50IiwiaXNGZXRjaGVkIiwiZGF0YVVwZGF0ZUNvdW50IiwiaXNGZXRjaGVkQWZ0ZXJNb3VudCIsImlzUmVmZXRjaGluZyIsImlzTG9hZGluZ0Vycm9yIiwiaXNQYXVzZWQiLCJpc1JlZmV0Y2hFcnJvciIsIm5leHRSZXN1bHQiLCJmaW5hbGl6ZVRoZW5hYmxlSWZQb3NzaWJsZSIsInRoZW5hYmxlIiwicmVzb2x2ZSIsInJlY3JlYXRlVGhlbmFibGUiLCJwZW5kaW5nIiwicHJldlRoZW5hYmxlIiwicXVlcnlIYXNoIiwidmFsdWUiLCJyZWFzb24iLCJkZWZhdWx0Tm90aWZ5T3B0aW9ucyIsInNob3VsZE5vdGlmeUxpc3RlbmVycyIsIm5vdGlmeU9uQ2hhbmdlUHJvcHMiLCJub3RpZnlPbkNoYW5nZVByb3BzVmFsdWUiLCJpbmNsdWRlZFByb3BzIiwic29tZSIsInR5cGVkS2V5IiwiY2hhbmdlZCIsImhhcyIsIiN1cGRhdGVRdWVyeSIsIm9uUXVlcnlVcGRhdGUiLCIjbm90aWZ5IiwiYmF0Y2giLCJsaXN0ZW5lciIsInNob3VsZExvYWRPbk1vdW50IiwicmV0cnlPbk1vdW50IiwicmVmZXRjaE9uTW91bnQiLCJmaWVsZCIsInN1c3BlbnNlIiwiaXNTdGFsZUJ5VGltZSIsIm9wdGltaXN0aWNSZXN1bHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/queryObserver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/removable.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/removable.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Removable: () => (/* binding */ Removable)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/removable.ts\n\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isValidTimeout)(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(this.gcTime || 0, newGcTime ?? (_utils_js__WEBPACK_IMPORTED_MODULE_0__.isServer ? Infinity : 5 * 60 * 1e3));\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3JlbW92YWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ3NEO0FBQ3RELElBQUlFLFNBQVMsR0FBRyxNQUFNO0VBQ3BCLENBQUNDLFNBQVM7RUFDVkMsT0FBT0EsQ0FBQSxFQUFHO0lBQ1IsSUFBSSxDQUFDQyxjQUFjLENBQUMsQ0FBQztFQUN2QjtFQUNBQyxVQUFVQSxDQUFBLEVBQUc7SUFDWCxJQUFJLENBQUNELGNBQWMsQ0FBQyxDQUFDO0lBQ3JCLElBQUlKLHlEQUFjLENBQUMsSUFBSSxDQUFDTSxNQUFNLENBQUMsRUFBRTtNQUMvQixJQUFJLENBQUMsQ0FBQ0osU0FBUyxHQUFHSyxVQUFVLENBQUMsTUFBTTtRQUNqQyxJQUFJLENBQUNDLGNBQWMsQ0FBQyxDQUFDO01BQ3ZCLENBQUMsRUFBRSxJQUFJLENBQUNGLE1BQU0sQ0FBQztJQUNqQjtFQUNGO0VBQ0FHLFlBQVlBLENBQUNDLFNBQVMsRUFBRTtJQUN0QixJQUFJLENBQUNKLE1BQU0sR0FBR0ssSUFBSSxDQUFDQyxHQUFHLENBQ3BCLElBQUksQ0FBQ04sTUFBTSxJQUFJLENBQUMsRUFDaEJJLFNBQVMsS0FBS1gsK0NBQVEsR0FBR2MsUUFBUSxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsR0FBRyxDQUNsRCxDQUFDO0VBQ0g7RUFDQVQsY0FBY0EsQ0FBQSxFQUFHO0lBQ2YsSUFBSSxJQUFJLENBQUMsQ0FBQ0YsU0FBUyxFQUFFO01BQ25CWSxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUNaLFNBQVMsQ0FBQztNQUM3QixJQUFJLENBQUMsQ0FBQ0EsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUMxQjtFQUNGO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2ppbnRhZWsvRG9jdW1lbnRzL3Byb2plY3QvZXJwL2Zyb250L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcmVtb3ZhYmxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9yZW1vdmFibGUudHNcbmltcG9ydCB7IGlzU2VydmVyLCBpc1ZhbGlkVGltZW91dCB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG52YXIgUmVtb3ZhYmxlID0gY2xhc3Mge1xuICAjZ2NUaW1lb3V0O1xuICBkZXN0cm95KCkge1xuICAgIHRoaXMuY2xlYXJHY1RpbWVvdXQoKTtcbiAgfVxuICBzY2hlZHVsZUdjKCkge1xuICAgIHRoaXMuY2xlYXJHY1RpbWVvdXQoKTtcbiAgICBpZiAoaXNWYWxpZFRpbWVvdXQodGhpcy5nY1RpbWUpKSB7XG4gICAgICB0aGlzLiNnY1RpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5vcHRpb25hbFJlbW92ZSgpO1xuICAgICAgfSwgdGhpcy5nY1RpbWUpO1xuICAgIH1cbiAgfVxuICB1cGRhdGVHY1RpbWUobmV3R2NUaW1lKSB7XG4gICAgdGhpcy5nY1RpbWUgPSBNYXRoLm1heChcbiAgICAgIHRoaXMuZ2NUaW1lIHx8IDAsXG4gICAgICBuZXdHY1RpbWUgPz8gKGlzU2VydmVyID8gSW5maW5pdHkgOiA1ICogNjAgKiAxZTMpXG4gICAgKTtcbiAgfVxuICBjbGVhckdjVGltZW91dCgpIHtcbiAgICBpZiAodGhpcy4jZ2NUaW1lb3V0KSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy4jZ2NUaW1lb3V0KTtcbiAgICAgIHRoaXMuI2djVGltZW91dCA9IHZvaWQgMDtcbiAgICB9XG4gIH1cbn07XG5leHBvcnQge1xuICBSZW1vdmFibGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmFibGUuanMubWFwIl0sIm5hbWVzIjpbImlzU2VydmVyIiwiaXNWYWxpZFRpbWVvdXQiLCJSZW1vdmFibGUiLCJnY1RpbWVvdXQiLCJkZXN0cm95IiwiY2xlYXJHY1RpbWVvdXQiLCJzY2hlZHVsZUdjIiwiZ2NUaW1lIiwic2V0VGltZW91dCIsIm9wdGlvbmFsUmVtb3ZlIiwidXBkYXRlR2NUaW1lIiwibmV3R2NUaW1lIiwiTWF0aCIsIm1heCIsIkluZmluaXR5IiwiY2xlYXJUaW1lb3V0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/removable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/retryer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/retryer.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelledError: () => (/* binding */ CancelledError),\n/* harmony export */   canFetch: () => (/* binding */ canFetch),\n/* harmony export */   createRetryer: () => (/* binding */ createRetryer),\n/* harmony export */   isCancelledError: () => (/* binding */ isCancelledError)\n/* harmony export */ });\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./onlineManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js\");\n/* harmony import */ var _thenable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./thenable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/thenable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/retryer.ts\n\n\n\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = (0,_thenable_js__WEBPACK_IMPORTED_MODULE_1__.pendingThenable)();\n  const cancel = cancelOptions => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => _focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.isFocused() && (config.networkMode === \"always\" || _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise(continueResolve => {\n      continueFn = value => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch(error => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (_utils_js__WEBPACK_IMPORTED_MODULE_3__.isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3JldHJ5ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNpRDtBQUNFO0FBQ0g7QUFDSDtBQUM3QyxTQUFTSyxpQkFBaUJBLENBQUNDLFlBQVksRUFBRTtFQUN2QyxPQUFPQyxJQUFJLENBQUNDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxJQUFJRixZQUFZLEVBQUUsR0FBRyxDQUFDO0FBQy9DO0FBQ0EsU0FBU0csUUFBUUEsQ0FBQ0MsV0FBVyxFQUFFO0VBQzdCLE9BQU8sQ0FBQ0EsV0FBVyxJQUFJLFFBQVEsTUFBTSxRQUFRLEdBQUdULDREQUFhLENBQUNVLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSTtBQUNqRjtBQUNBLElBQUlDLGNBQWMsR0FBRyxjQUFjQyxLQUFLLENBQUM7RUFDdkNDLFdBQVdBLENBQUNDLE9BQU8sRUFBRTtJQUNuQixLQUFLLENBQUMsZ0JBQWdCLENBQUM7SUFDdkIsSUFBSSxDQUFDQyxNQUFNLEdBQUdELE9BQU8sRUFBRUMsTUFBTTtJQUM3QixJQUFJLENBQUNDLE1BQU0sR0FBR0YsT0FBTyxFQUFFRSxNQUFNO0VBQy9CO0FBQ0YsQ0FBQztBQUNELFNBQVNDLGdCQUFnQkEsQ0FBQ0MsS0FBSyxFQUFFO0VBQy9CLE9BQU9BLEtBQUssWUFBWVAsY0FBYztBQUN4QztBQUNBLFNBQVNRLGFBQWFBLENBQUNDLE1BQU0sRUFBRTtFQUM3QixJQUFJQyxnQkFBZ0IsR0FBRyxLQUFLO0VBQzVCLElBQUloQixZQUFZLEdBQUcsQ0FBQztFQUNwQixJQUFJaUIsVUFBVSxHQUFHLEtBQUs7RUFDdEIsSUFBSUMsVUFBVTtFQUNkLE1BQU1DLFFBQVEsR0FBR3ZCLDZEQUFlLENBQUMsQ0FBQztFQUNsQyxNQUFNd0IsTUFBTSxHQUFJQyxhQUFhLElBQUs7SUFDaEMsSUFBSSxDQUFDSixVQUFVLEVBQUU7TUFDZkssTUFBTSxDQUFDLElBQUlo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QixRQUFRLENBQUMsQ0FBQyxFQUFFO1FBQ2RVLEdBQUcsQ0FBQyxDQUFDO01BQ1AsQ0FBQyxNQUFNO1FBQ0xOLEtBQUssQ0FBQyxDQUFDLENBQUNJLElBQUksQ0FBQ0UsR0FBRyxDQUFDO01BQ25CO01BQ0EsT0FBT3BCLFFBQVE7SUFDakI7RUFDRixDQUFDO0FBQ0giLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaW50YWVrL0RvY3VtZW50cy9wcm9qZWN0L2VycC9mcm9udC9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3JldHJ5ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3JldHJ5ZXIudHNcbmltcG9ydCB7IGZvY3VzTWFuYWdlciB9IGZyb20gXCIuL2ZvY3VzTWFuYWdlci5qc1wiO1xuaW1wb3J0IHsgb25saW5lTWFuYWdlciB9IGZyb20gXCIuL29ubGluZU1hbmFnZXIuanNcIjtcbmltcG9ydCB7IHBlbmRpbmdUaGVuYWJsZSB9IGZyb20gXCIuL3RoZW5hYmxlLmpzXCI7XG5pbXBvcnQgeyBpc1NlcnZlciwgc2xlZXAgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuZnVuY3Rpb24gZGVmYXVsdFJldHJ5RGVsYXkoZmFpbHVyZUNvdW50KSB7XG4gIHJldHVybiBNYXRoLm1pbigxZTMgKiAyICoqIGZhaWx1cmVDb3VudCwgM2U0KTtcbn1cbmZ1bmN0aW9uIGNhbkZldGNoKG5ldHdvcmtNb2RlKSB7XG4gIHJldHVybiAobmV0d29ya01vZGUgPz8gXCJvbmxpbmVcIikgPT09IFwib25saW5lXCIgPyBvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCkgOiB0cnVlO1xufVxudmFyIENhbmNlbGxlZEVycm9yID0gY2xhc3MgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBzdXBlcihcIkNhbmNlbGxlZEVycm9yXCIpO1xuICAgIHRoaXMucmV2ZXJ0ID0gb3B0aW9ucz8ucmV2ZXJ0O1xuICAgIHRoaXMuc2lsZW50ID0gb3B0aW9ucz8uc2lsZW50O1xuICB9XG59O1xuZnVuY3Rpb24gaXNDYW5jZWxsZWRFcnJvcih2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBDYW5jZWxsZWRFcnJvcjtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVJldHJ5ZXIoY29uZmlnKSB7XG4gIGxldCBpc1JldHJ5Q2FuY2VsbGVkID0gZmFsc2U7XG4gIGxldCBmYWlsdXJlQ291bnQgPSAwO1xuICBsZXQgaXNSZXNvbHZlZCA9IGZhbHNlO1xuICBsZXQgY29udGludWVGbjtcbiAgY29uc3QgdGhlbmFibGUgPSBwZW5kaW5nVGhlbmFibGUoKTtcbiAgY29uc3QgY2FuY2VsID0gKGNhbmNlbE9wdGlvbnMpID0+IHtcbiAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcbiAgICAgIHJlamVjdChuZXcgQ2FuY2VsbGVkRXJyb3IoY2FuY2VsT3B0aW9ucykpO1xuICAgICAgY29uZmlnLmFib3J0Py4oKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IGNhbmNlbFJldHJ5ID0gKCkgPT4ge1xuICAgIGlzUmV0cnlDYW5jZWxsZWQgPSB0cnVlO1xuICB9O1xuICBjb25zdCBjb250aW51ZVJldHJ5ID0gKCkgPT4ge1xuICAgIGlzUmV0cnlDYW5jZWxsZWQgPSBmYWxzZTtcbiAgfTtcbiAgY29uc3QgY2FuQ29udGludWUgPSAoKSA9PiBmb2N1c01hbmFnZXIuaXNGb2N1c2VkKCkgJiYgKGNvbmZpZy5uZXR3b3JrTW9kZSA9PT0gXCJhbHdheXNcIiB8fCBvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCkpICYmIGNvbmZpZy5jYW5SdW4oKTtcbiAgY29uc3QgY2FuU3RhcnQgPSAoKSA9PiBjYW5GZXRjaChjb25maWcubmV0d29ya01vZGUpICYmIGNvbmZpZy5jYW5SdW4oKTtcbiAgY29uc3QgcmVzb2x2ZSA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICghaXNSZXNvbHZlZCkge1xuICAgICAgaXNSZXNvbHZlZCA9IHRydWU7XG4gICAgICBjb25maWcub25TdWNjZXNzPy4odmFsdWUpO1xuICAgICAgY29udGludWVGbj8uKCk7XG4gICAgICB0aGVuYWJsZS5yZXNvbHZlKHZhbHVlKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IHJlamVjdCA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICghaXNSZXNvbHZlZCkge1xuICAgICAgaXNSZXNvbHZlZCA9IHRydWU7XG4gICAgICBjb25maWcub25FcnJvcj8uKHZhbHVlKTtcbiAgICAgIGNvbnRpbnVlRm4/LigpO1xuICAgICAgdGhlbmFibGUucmVqZWN0KHZhbHVlKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IHBhdXNlID0gKCkgPT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgoY29udGludWVSZXNvbHZlKSA9PiB7XG4gICAgICBjb250aW51ZUZuID0gKHZhbHVlKSA9PiB7XG4gICAgICAgIGlmIChpc1Jlc29sdmVkIHx8IGNhbkNvbnRpbnVlKCkpIHtcbiAgICAgICAgICBjb250aW51ZVJlc29sdmUodmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgY29uZmlnLm9uUGF1c2U/LigpO1xuICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgY29udGludWVGbiA9IHZvaWQgMDtcbiAgICAgIGlmICghaXNSZXNvbHZlZCkge1xuICAgICAgICBjb25maWcub25Db250aW51ZT8uKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IHJ1biA9ICgpID0+IHtcbiAgICBpZiAoaXNSZXNvbHZlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQgcHJvbWlzZU9yVmFsdWU7XG4gICAgY29uc3QgaW5pdGlhbFByb21pc2UgPSBmYWlsdXJlQ291bnQgPT09IDAgPyBjb25maWcuaW5pdGlhbFByb21pc2UgOiB2b2lkIDA7XG4gICAgdHJ5IHtcbiAgICAgIHByb21pc2VPclZhbHVlID0gaW5pdGlhbFByb21pc2UgPz8gY29uZmlnLmZuKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHByb21pc2VPclZhbHVlID0gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgIH1cbiAgICBQcm9taXNlLnJlc29sdmUocHJvbWlzZU9yVmFsdWUpLnRoZW4ocmVzb2x2ZSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICBpZiAoaXNSZXNvbHZlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCByZXRyeSA9IGNvbmZpZy5yZXRyeSA/PyAoaXNTZXJ2ZXIgPyAwIDogMyk7XG4gICAgICBjb25zdCByZXRyeURlbGF5ID0gY29uZmlnLnJldHJ5RGVsYXkgPz8gZGVmYXVsdFJldHJ5RGVsYXk7XG4gICAgICBjb25zdCBkZWxheSA9IHR5cGVvZiByZXRyeURlbGF5ID09PSBcImZ1bmN0aW9uXCIgPyByZXRyeURlbGF5KGZhaWx1cmVDb3VudCwgZXJyb3IpIDogcmV0cnlEZWxheTtcbiAgICAgIGNvbnN0IHNob3VsZFJldHJ5ID0gcmV0cnkgPT09IHRydWUgfHwgdHlwZW9mIHJldHJ5ID09PSBcIm51bWJlclwiICYmIGZhaWx1cmVDb3VudCA8IHJldHJ5IHx8IHR5cGVvZiByZXRyeSA9PT0gXCJmdW5jdGlvblwiICYmIHJldHJ5KGZhaWx1cmVDb3VudCwgZXJyb3IpO1xuICAgICAgaWYgKGlzUmV0cnlDYW5jZWxsZWQgfHwgIXNob3VsZFJldHJ5KSB7XG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGZhaWx1cmVDb3VudCsrO1xuICAgICAgY29uZmlnLm9uRmFpbD8uKGZhaWx1cmVDb3VudCwgZXJyb3IpO1xuICAgICAgc2xlZXAoZGVsYXkpLnRoZW4oKCkgPT4ge1xuICAgICAgICByZXR1cm4gY2FuQ29udGludWUoKSA/IHZvaWQgMCA6IHBhdXNlKCk7XG4gICAgICB9KS50aGVuKCgpID0+IHtcbiAgICAgICAgaWYgKGlzUmV0cnlDYW5jZWxsZWQpIHtcbiAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJ1bigpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBwcm9taXNlOiB0aGVuYWJsZSxcbiAgICBjYW5jZWwsXG4gICAgY29udGludWU6ICgpID0+IHtcbiAgICAgIGNvbnRpbnVlRm4/LigpO1xuICAgICAgcmV0dXJuIHRoZW5hYmxlO1xuICAgIH0sXG4gICAgY2FuY2VsUmV0cnksXG4gICAgY29udGludWVSZXRyeSxcbiAgICBjYW5TdGFydCxcbiAgICBzdGFydDogKCkgPT4ge1xuICAgICAgaWYgKGNhblN0YXJ0KCkpIHtcbiAgICAgICAgcnVuKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXVzZSgpLnRoZW4ocnVuKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGVuYWJsZTtcbiAgICB9XG4gIH07XG59XG5leHBvcnQge1xuICBDYW5jZWxsZWRFcnJvcixcbiAgY2FuRmV0Y2gsXG4gIGNyZWF0ZVJldHJ5ZXIsXG4gIGlzQ2FuY2VsbGVkRXJyb3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXRyeWVyLmpzLm1hcCJdLCJuYW1lcyI6WyJmb2N1c01hbmFnZXIiLCJvbmxpbmVNYW5hZ2VyIiwicGVuZGluZ1RoZW5hYmxlIiwiaXNTZXJ2ZXIiLCJzbGVlcCIsImRlZmF1bHRSZXRyeURlbGF5IiwiZmFpbHVyZUNvdW50IiwiTWF0aCIsIm1pbiIsImNhbkZldGNoIiwibmV0d29ya01vZGUiLCJpc09ubGluZSIsIkNhbmNlbGxlZEVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiLCJyZXZlcnQiLCJzaWxlbnQiLCJpc0NhbmNlbGxlZEVycm9yIiwidmFsdWUiLCJjcmVhdGVSZXRyeWVyIiwiY29uZmlnIiwiaXNSZXRyeUNhbmNlbGxlZCIsImlzUmVzb2x2ZWQiLCJjb250aW51ZUZuIiwidGhlbmFibGUiLCJjYW5jZWwiLCJjYW5jZWxPcHRpb25zIiwicmVqZWN0IiwiYWJvcnQiLCJjYW5jZWxSZXRyeSIsImNvbnRpbnVlUmV0cnkiLCJjYW5Db250aW51ZSIsImlzRm9jdXNlZCIsImNhblJ1biIsImNhblN0YXJ0IiwicmVzb2x2ZSIsIm9uU3VjY2VzcyIsIm9uRXJyb3IiLCJwYXVzZSIsIlByb21pc2UiLCJjb250aW51ZVJlc29sdmUiLCJvblBhdXNlIiwidGhlbiIsIm9uQ29udGludWUiLCJydW4iLCJwcm9taXNlT3JWYWx1ZSIsImluaXRpYWxQcm9taXNlIiwiZm4iLCJlcnJvciIsImNhdGNoIiwicmV0cnkiLCJyZXRyeURlbGF5IiwiZGVsYXkiLCJzaG91bGRSZXRyeSIsIm9uRmFpbCIsInByb21pc2UiLCJjb250aW51ZSIsInN0YXJ0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/retryer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/subscribable.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subscribable: () => (/* binding */ Subscribable)\n/* harmony export */ });\n// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {}\n  onUnsubscribe() {}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3N1YnNjcmliYWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxJQUFJQSxZQUFZLEdBQUcsTUFBTTtFQUN2QkMsV0FBV0EsQ0FBQSxFQUFHO0lBQ1osSUFBSSxDQUFDQyxTQUFTLEdBQUcsZUFBZ0IsSUFBSUMsR0FBRyxDQUFDLENBQUM7SUFDMUMsSUFBSSxDQUFDQyxTQUFTLEdBQUcsSUFBSSxDQUFDQSxTQUFTLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUM7RUFDNUM7RUFDQUQsU0FBU0EsQ0FBQ0UsUUFBUSxFQUFFO0lBQ2xCLElBQUksQ0FBQ0osU0FBUyxDQUFDSyxHQUFHLENBQUNELFFBQVEsQ0FBQztJQUM1QixJQUFJLENBQUNFLFdBQVcsQ0FBQyxDQUFDO0lBQ2xCLE9BQU8sTUFBTTtNQUNYLElBQUksQ0FBQ04sU0FBUyxDQUFDTyxNQUFNLENBQUNILFFBQVEsQ0FBQztNQUMvQixJQUFJLENBQUNJLGFBQWEsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7RUFDSDtFQUNBQyxZQUFZQSxDQUFBLEVBQUc7SUFDYixPQUFPLElBQUksQ0FBQ1QsU0FBUyxDQUFDVSxJQUFJLEdBQUcsQ0FBQztFQUNoQztFQUNBSixXQUFXQSxDQUFBLEVBQUcsQ0FDZDtFQUNBRSxhQUFhQSxDQUFBLEVBQUcsQ0FDaEI7QUFDRixDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvamludGFlay9Eb2N1bWVudHMvcHJvamVjdC9lcnAvZnJvbnQvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9zdWJzY3JpYmFibGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3N1YnNjcmliYWJsZS50c1xudmFyIFN1YnNjcmliYWJsZSA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICAgIHRoaXMuc3Vic2NyaWJlID0gdGhpcy5zdWJzY3JpYmUuYmluZCh0aGlzKTtcbiAgfVxuICBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICB0aGlzLmxpc3RlbmVycy5hZGQobGlzdGVuZXIpO1xuICAgIHRoaXMub25TdWJzY3JpYmUoKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgdGhpcy5saXN0ZW5lcnMuZGVsZXRlKGxpc3RlbmVyKTtcbiAgICAgIHRoaXMub25VbnN1YnNjcmliZSgpO1xuICAgIH07XG4gIH1cbiAgaGFzTGlzdGVuZXJzKCkge1xuICAgIHJldHVybiB0aGlzLmxpc3RlbmVycy5zaXplID4gMDtcbiAgfVxuICBvblN1YnNjcmliZSgpIHtcbiAgfVxuICBvblVuc3Vic2NyaWJlKCkge1xuICB9XG59O1xuZXhwb3J0IHtcbiAgU3Vic2NyaWJhYmxlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3Vic2NyaWJhYmxlLmpzLm1hcCJdLCJuYW1lcyI6WyJTdWJzY3JpYmFibGUiLCJjb25zdHJ1Y3RvciIsImxpc3RlbmVycyIsIlNldCIsInN1YnNjcmliZSIsImJpbmQiLCJsaXN0ZW5lciIsImFkZCIsIm9uU3Vic2NyaWJlIiwiZGVsZXRlIiwib25VbnN1YnNjcmliZSIsImhhc0xpc3RlbmVycyIsInNpemUiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/thenable.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/thenable.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pendingThenable: () => (/* binding */ pendingThenable)\n/* harmony export */ });\n// src/thenable.ts\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {});\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = value => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = reason => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3RoZW5hYmxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLFNBQVNBLGVBQWVBLENBQUEsRUFBRztFQUN6QixJQUFJQyxPQUFPO0VBQ1gsSUFBSUMsTUFBTTtFQUNWLE1BQU1DLFFBQVEsR0FBRyxJQUFJQyxPQUFPLENBQUMsQ0FBQ0MsUUFBUSxFQUFFQyxPQUFPLEtBQUs7SUFDbERMLE9BQU8sR0FBR0ksUUFBUTtJQUNsQkgsTUFBTSxHQUFHSSxPQUFPO0VBQ2xCLENBQUMsQ0FBQztFQUNGSCxRQUFRLENBQUNJLE1BQU0sR0FBRyxTQUFTO0VBQzNCSixRQUFRLENBQUNLLEtBQUssQ0FBQyxNQUFNLENBQ3JCLENBQUMsQ0FBQztFQUNGLFNBQVNDLFFBQVFBLENBQUNDLElBQUksRUFBRTtJQUN0QkMsTUFBTSxDQUFDQyxNQUFNLENBQUNULFFBQVEsRUFBRU8sSUFBSSxDQUFDO0lBQzdCLE9BQU9QLFFBQVEsQ0FBQ0YsT0FBTztJQUN2QixPQUFPRSxRQUFRLENBQUNELE1BQU07RUFDeEI7RUFDQUMsUUFBUSxDQUFDRixPQUFPLEdBQUlZLEtBQUssSUFBSztJQUM1QkosUUFBUSxDQUFDO01BQ1BGLE1BQU0sRUFBRSxXQUFXO01BQ25CTTtJQUNGLENBQUMsQ0FBQztJQUNGWixPQUFPLENBQUNZLEtBQUssQ0FBQztFQUNoQixDQUFDO0VBQ0RWLFFBQVEsQ0FBQ0QsTUFBTSxHQUFJWSxNQUFNLElBQUs7SUFDNUJMLFFBQVEsQ0FBQztNQUNQRixNQUFNLEVBQUUsVUFBVTtNQUNsQk87SUFDRixDQUFDLENBQUM7SUFDRlosTUFBTSxDQUFDWSxNQUFNLENBQUM7RUFDaEIsQ0FBQztFQUNELE9BQU9YLFFBQVE7QUFDakIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaW50YWVrL0RvY3VtZW50cy9wcm9qZWN0L2VycC9mcm9udC9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3RoZW5hYmxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy90aGVuYWJsZS50c1xuZnVuY3Rpb24gcGVuZGluZ1RoZW5hYmxlKCkge1xuICBsZXQgcmVzb2x2ZTtcbiAgbGV0IHJlamVjdDtcbiAgY29uc3QgdGhlbmFibGUgPSBuZXcgUHJvbWlzZSgoX3Jlc29sdmUsIF9yZWplY3QpID0+IHtcbiAgICByZXNvbHZlID0gX3Jlc29sdmU7XG4gICAgcmVqZWN0ID0gX3JlamVjdDtcbiAgfSk7XG4gIHRoZW5hYmxlLnN0YXR1cyA9IFwicGVuZGluZ1wiO1xuICB0aGVuYWJsZS5jYXRjaCgoKSA9PiB7XG4gIH0pO1xuICBmdW5jdGlvbiBmaW5hbGl6ZShkYXRhKSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGVuYWJsZSwgZGF0YSk7XG4gICAgZGVsZXRlIHRoZW5hYmxlLnJlc29sdmU7XG4gICAgZGVsZXRlIHRoZW5hYmxlLnJlamVjdDtcbiAgfVxuICB0aGVuYWJsZS5yZXNvbHZlID0gKHZhbHVlKSA9PiB7XG4gICAgZmluYWxpemUoe1xuICAgICAgc3RhdHVzOiBcImZ1bGZpbGxlZFwiLFxuICAgICAgdmFsdWVcbiAgICB9KTtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfTtcbiAgdGhlbmFibGUucmVqZWN0ID0gKHJlYXNvbikgPT4ge1xuICAgIGZpbmFsaXplKHtcbiAgICAgIHN0YXR1czogXCJyZWplY3RlZFwiLFxuICAgICAgcmVhc29uXG4gICAgfSk7XG4gICAgcmVqZWN0KHJlYXNvbik7XG4gIH07XG4gIHJldHVybiB0aGVuYWJsZTtcbn1cbmV4cG9ydCB7XG4gIHBlbmRpbmdUaGVuYWJsZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRoZW5hYmxlLmpzLm1hcCJdLCJuYW1lcyI6WyJwZW5kaW5nVGhlbmFibGUiLCJyZXNvbHZlIiwicmVqZWN0IiwidGhlbmFibGUiLCJQcm9taXNlIiwiX3Jlc29sdmUiLCJfcmVqZWN0Iiwic3RhdHVzIiwiY2F0Y2giLCJmaW5hbGl6ZSIsImRhdGEiLCJPYmplY3QiLCJhc3NpZ24iLCJ2YWx1ZSIsInJlYXNvbiJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/thenable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/utils.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToEnd: () => (/* binding */ addToEnd),\n/* harmony export */   addToStart: () => (/* binding */ addToStart),\n/* harmony export */   ensureQueryFn: () => (/* binding */ ensureQueryFn),\n/* harmony export */   functionalUpdate: () => (/* binding */ functionalUpdate),\n/* harmony export */   hashKey: () => (/* binding */ hashKey),\n/* harmony export */   hashQueryKeyByOptions: () => (/* binding */ hashQueryKeyByOptions),\n/* harmony export */   isPlainArray: () => (/* binding */ isPlainArray),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isServer: () => (/* binding */ isServer),\n/* harmony export */   isValidTimeout: () => (/* binding */ isValidTimeout),\n/* harmony export */   keepPreviousData: () => (/* binding */ keepPreviousData),\n/* harmony export */   matchMutation: () => (/* binding */ matchMutation),\n/* harmony export */   matchQuery: () => (/* binding */ matchQuery),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   partialMatchKey: () => (/* binding */ partialMatchKey),\n/* harmony export */   replaceData: () => (/* binding */ replaceData),\n/* harmony export */   replaceEqualDeep: () => (/* binding */ replaceEqualDeep),\n/* harmony export */   resolveEnabled: () => (/* binding */ resolveEnabled),\n/* harmony export */   resolveStaleTime: () => (/* binding */ resolveStaleTime),\n/* harmony export */   shallowEqualObjects: () => (/* binding */ shallowEqualObjects),\n/* harmony export */   skipToken: () => (/* binding */ skipToken),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   timeUntilStale: () => (/* binding */ timeUntilStale)\n/* harmony export */ });\n// src/utils.ts\nvar isServer =  true || 0;\nfunction noop() {}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const {\n    exact,\n    status,\n    predicate,\n    mutationKey\n  } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(queryKey, (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n    result[key] = val[key];\n    return result;\n  }, {}) : val);\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return !Object.keys(b).some(key => !partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (true) {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(`Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`);\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (true) {\n    if (options.queryFn === skipToken) {\n      console.error(`Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`);\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClientContext: () => (/* binding */ QueryClientContext),\n/* harmony export */   QueryClientProvider: () => (/* binding */ QueryClientProvider),\n/* harmony export */   useQueryClient: () => (/* binding */ useQueryClient)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ QueryClientContext,QueryClientProvider,useQueryClient auto */ // src/QueryClientProvider.tsx\n\n\nvar QueryClientContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\nvar useQueryClient = (queryClient)=>{\n    const client = react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientContext);\n    if (queryClient) {\n        return queryClient;\n    }\n    if (!client) {\n        throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n    }\n    return client;\n};\nvar QueryClientProvider = ({ client, children })=>{\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"QueryClientProvider.useEffect\": ()=>{\n            client.mount();\n            return ({\n                \"QueryClientProvider.useEffect\": ()=>{\n                    client.unmount();\n                }\n            })[\"QueryClientProvider.useEffect\"];\n        }\n    }[\"QueryClientProvider.useEffect\"], [\n        client\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(QueryClientContext.Provider, {\n        value: client,\n        children\n    });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9RdWVyeUNsaWVudFByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OzJHQUVBO0FBQzhCO0FBQ1M7QUFDdkMsSUFBSUUsa0JBQWtCLGlCQUFHRixnREFBbUIsQ0FDMUMsS0FBSyxDQUNQLENBQUM7QUFDRCxJQUFJSSxjQUFjLElBQUlDLFdBQVcsSUFBSztJQUNwQyxNQUFNQyxNQUFNLEdBQUdOLDZDQUFnQixDQUFDRSxrQkFBa0IsQ0FBQztJQUNuRCxJQUFJRyxXQUFXLEVBQUU7UUFDZixPQUFPQSxXQUFXO0lBQ3BCO0lBQ0EsSUFBSSxDQUFDQyxNQUFNLEVBQUU7UUFDWCxNQUFNLElBQUlFLEtBQUssQ0FBQyx3REFBd0QsQ0FBQztJQUMzRTtJQUNBLE9BQU9GLE1BQU07QUFDZixDQUFDO0FBQ0QsSUFBSUcsbUJBQW1CLEdBQUdBLENBQUMsRUFDekJILE1BQU0sRUFDTkksUUFBQUEsRUFDRDtJQUNDViw0Q0FBZTt5Q0FBQztZQUNkTSxNQUFNLENBQUNNLEtBQUssQ0FBQyxDQUFDO1lBQ2Q7aURBQU87b0JBQ0xOLE1BQU0sQ0FBQ08sT0FBTyxDQUFDLENBQUM7Z0JBQ2xCLENBQUM7O1FBQ0gsQ0FBQzt3Q0FBRTtRQUFDUCxNQUFNO0tBQUMsQ0FBQztJQUNaLE9BQU8sZ0JBQWdCTCxzREFBRyxDQUFDQyxrQkFBa0IsQ0FBQ1ksUUFBUSxFQUFFO1FBQUVDLEtBQUssRUFBRVQsTUFBTTtRQUFFSTtJQUFTLENBQUMsQ0FBQztBQUN0RixDQUFDO0FBSWUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaW50YWVrL0RvY3VtZW50cy9wcm9qZWN0L2VycC9mcm9udC9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9RdWVyeUNsaWVudFByb3ZpZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG4vLyBzcmMvUXVlcnlDbGllbnRQcm92aWRlci50c3hcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsganN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG52YXIgUXVlcnlDbGllbnRDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChcbiAgdm9pZCAwXG4pO1xudmFyIHVzZVF1ZXJ5Q2xpZW50ID0gKHF1ZXJ5Q2xpZW50KSA9PiB7XG4gIGNvbnN0IGNsaWVudCA9IFJlYWN0LnVzZUNvbnRleHQoUXVlcnlDbGllbnRDb250ZXh0KTtcbiAgaWYgKHF1ZXJ5Q2xpZW50KSB7XG4gICAgcmV0dXJuIHF1ZXJ5Q2xpZW50O1xuICB9XG4gIGlmICghY2xpZW50KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gUXVlcnlDbGllbnQgc2V0LCB1c2UgUXVlcnlDbGllbnRQcm92aWRlciB0byBzZXQgb25lXCIpO1xuICB9XG4gIHJldHVybiBjbGllbnQ7XG59O1xudmFyIFF1ZXJ5Q2xpZW50UHJvdmlkZXIgPSAoe1xuICBjbGllbnQsXG4gIGNoaWxkcmVuXG59KSA9PiB7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY2xpZW50Lm1vdW50KCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNsaWVudC51bm1vdW50KCk7XG4gICAgfTtcbiAgfSwgW2NsaWVudF0pO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChRdWVyeUNsaWVudENvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGNsaWVudCwgY2hpbGRyZW4gfSk7XG59O1xuZXhwb3J0IHtcbiAgUXVlcnlDbGllbnRDb250ZXh0LFxuICBRdWVyeUNsaWVudFByb3ZpZGVyLFxuICB1c2VRdWVyeUNsaWVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVF1ZXJ5Q2xpZW50UHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0IiwianN4IiwiUXVlcnlDbGllbnRDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsInVzZVF1ZXJ5Q2xpZW50IiwicXVlcnlDbGllbnQiLCJjbGllbnQiLCJ1c2VDb250ZXh0IiwiRXJyb3IiLCJRdWVyeUNsaWVudFByb3ZpZGVyIiwiY2hpbGRyZW4iLCJ1c2VFZmZlY3QiLCJtb3VudCIsInVubW91bnQiLCJQcm92aWRlciIsInZhbHVlIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryErrorResetBoundary: () => (/* binding */ QueryErrorResetBoundary),\n/* harmony export */   useQueryErrorResetBoundary: () => (/* binding */ useQueryErrorResetBoundary)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ QueryErrorResetBoundary,useQueryErrorResetBoundary auto */ // src/QueryErrorResetBoundary.tsx\n\n\nfunction createValue() {\n    let isReset = false;\n    return {\n        clearReset: ()=>{\n            isReset = false;\n        },\n        reset: ()=>{\n            isReset = true;\n        },\n        isReset: ()=>{\n            return isReset;\n        }\n    };\n}\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(createValue());\nvar useQueryErrorResetBoundary = ()=>react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({ children })=>{\n    const [value] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n        \"QueryErrorResetBoundary.useState\": ()=>createValue()\n    }[\"QueryErrorResetBoundary.useState\"]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(QueryErrorResetBoundaryContext.Provider, {\n        value,\n        children: typeof children === \"function\" ? children(value) : children\n    });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9RdWVyeUVycm9yUmVzZXRCb3VuZGFyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O3dHQUVBO0FBQzhCO0FBQ1M7QUFDdkMsU0FBU0UsV0FBV0EsQ0FBQSxFQUFHO0lBQ3JCLElBQUlDLE9BQU8sR0FBRyxLQUFLO0lBQ25CLE9BQU87UUFDTEMsVUFBVSxFQUFFQSxDQUFBO1lBQ1ZELE9BQU8sR0FBRyxLQUFLO1FBQ2pCLENBQUM7UUFDREUsS0FBSyxFQUFFQSxDQUFBO1lBQ0xGLE9BQU8sR0FBRyxJQUFJO1FBQ2hCLENBQUM7UUFDREEsT0FBTyxFQUFFQSxDQUFBO1lBQ1AsT0FBT0EsT0FBTztRQUNoQjtJQUNGLENBQUM7QUFDSDtBQUNBLElBQUlHLDhCQUE4QixpQkFBR04sZ0RBQW1CLENBQUNFLFdBQVcsQ0FBQyxDQUFDLENBQUM7QUFDdkUsSUFBSU0sMEJBQTBCLEdBQUdBLENBQUEsR0FBTVIsNkNBQWdCLENBQUNNLDhCQUE4QixDQUFDO0FBQ3ZGLElBQUlJLHVCQUF1QixHQUFHQSxDQUFDLEVBQzdCQyxRQUFBQSxFQUNEO0lBQ0MsTUFBTSxDQUFDQyxLQUFLLENBQUMsR0FBR1osMkNBQWM7NENBQUMsSUFBTUUsV0FBVyxDQUFDLENBQUM7O0lBQ2xELE9BQU8sZ0JBQWdCRCxzREFBRyxDQUFDSyw4QkFBOEIsQ0FBQ1EsUUFBUSxFQUFFO1FBQUVGLEtBQUs7UUFBRUQsUUFBUSxFQUFFLE9BQU9BLFFBQVEsS0FBSyxVQUFVLEdBQUdBLFFBQVEsQ0FBQ0MsS0FBSyxDQUFDLEdBQUdEO0lBQVMsQ0FBQyxDQUFDO0FBQ3ZKLENBQUM7QUFHMkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaW50YWVrL0RvY3VtZW50cy9wcm9qZWN0L2VycC9mcm9udC9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9RdWVyeUVycm9yUmVzZXRCb3VuZGFyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuLy8gc3JjL1F1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5LnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmZ1bmN0aW9uIGNyZWF0ZVZhbHVlKCkge1xuICBsZXQgaXNSZXNldCA9IGZhbHNlO1xuICByZXR1cm4ge1xuICAgIGNsZWFyUmVzZXQ6ICgpID0+IHtcbiAgICAgIGlzUmVzZXQgPSBmYWxzZTtcbiAgICB9LFxuICAgIHJlc2V0OiAoKSA9PiB7XG4gICAgICBpc1Jlc2V0ID0gdHJ1ZTtcbiAgICB9LFxuICAgIGlzUmVzZXQ6ICgpID0+IHtcbiAgICAgIHJldHVybiBpc1Jlc2V0O1xuICAgIH1cbiAgfTtcbn1cbnZhciBRdWVyeUVycm9yUmVzZXRCb3VuZGFyeUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGNyZWF0ZVZhbHVlKCkpO1xudmFyIHVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5ID0gKCkgPT4gUmVhY3QudXNlQ29udGV4dChRdWVyeUVycm9yUmVzZXRCb3VuZGFyeUNvbnRleHQpO1xudmFyIFF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5ID0gKHtcbiAgY2hpbGRyZW5cbn0pID0+IHtcbiAgY29uc3QgW3ZhbHVlXSA9IFJlYWN0LnVzZVN0YXRlKCgpID0+IGNyZWF0ZVZhbHVlKCkpO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChRdWVyeUVycm9yUmVzZXRCb3VuZGFyeUNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWUsIGNoaWxkcmVuOiB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IGNoaWxkcmVuKHZhbHVlKSA6IGNoaWxkcmVuIH0pO1xufTtcbmV4cG9ydCB7XG4gIFF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5LFxuICB1c2VRdWVyeUVycm9yUmVzZXRCb3VuZGFyeVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5LmpzLm1hcCJdLCJuYW1lcyI6WyJSZWFjdCIsImpzeCIsImNyZWF0ZVZhbHVlIiwiaXNSZXNldCIsImNsZWFyUmVzZXQiLCJyZXNldCIsIlF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5Q29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VRdWVyeUVycm9yUmVzZXRCb3VuZGFyeSIsInVzZUNvbnRleHQiLCJRdWVyeUVycm9yUmVzZXRCb3VuZGFyeSIsImNoaWxkcmVuIiwidmFsdWUiLCJ1c2VTdGF0ZSIsIlByb3ZpZGVyIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensurePreventErrorBoundaryRetry: () => (/* binding */ ensurePreventErrorBoundaryRetry),\n/* harmony export */   getHasError: () => (/* binding */ getHasError),\n/* harmony export */   useClearResetErrorBoundary: () => (/* binding */ useClearResetErrorBoundary)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/utils.js\");\n/* __next_internal_client_entry_do_not_use__ ensurePreventErrorBoundaryRetry,getHasError,useClearResetErrorBoundary auto */ // src/errorBoundaryUtils.ts\n\n\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary)=>{\n    if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n        if (!errorResetBoundary.isReset()) {\n            options.retryOnMount = false;\n        }\n    }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary)=>{\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"useClearResetErrorBoundary.useEffect\": ()=>{\n            errorResetBoundary.clearReset();\n        }\n    }[\"useClearResetErrorBoundary.useEffect\"], [\n        errorResetBoundary\n    ]);\n};\nvar getHasError = ({ result, errorResetBoundary, throwOnError, query, suspense })=>{\n    return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldThrowError)(throwOnError, [\n        result.error,\n        query\n    ]));\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9lcnJvckJvdW5kYXJ5VXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7NEhBRUE7QUFDOEI7QUFDZTtBQUM3QyxJQUFJRSwrQkFBK0IsR0FBR0EsQ0FBQ0MsT0FBTyxFQUFFQyxrQkFBa0I7SUFDaEUsSUFBSUQsT0FBTyxDQUFDRSxRQUFRLElBQUlGLE9BQU8sQ0FBQ0csWUFBWSxJQUFJSCxPQUFPLENBQUNJLDZCQUE2QixFQUFFO1FBQ3JGLElBQUksQ0FBQ0gsa0JBQWtCLENBQUNJLE9BQU8sQ0FBQyxDQUFDLEVBQUU7WUFDakNMLE9BQU8sQ0FBQ00sWUFBWSxHQUFHLEtBQUs7UUFDOUI7SUFDRjtBQUNGLENBQUM7QUFDRCxJQUFJQywwQkFBMEIsSUFBSU4sa0JBQWtCLElBQUs7SUFDdkRKLDRDQUFlO2dEQUFDO1lBQ2RJLGtCQUFrQixDQUFDUSxVQUFVLENBQUMsQ0FBQztRQUNqQyxDQUFDOytDQUFFO1FBQUNSLGtCQUFrQjtLQUFDLENBQUM7QUFDMUIsQ0FBQztBQUNELElBQUlTLFdBQVcsR0FBR0EsQ0FBQyxFQUNqQkMsTUFBTSxFQUNOVixrQkFBa0IsRUFDbEJFLFlBQVksRUFDWlMsS0FBSyxFQUNMVixRQUFBQSxFQUNEO0lBQ0MsT0FBT1MsTUFBTSxDQUFDRSxPQUFPLElBQUksQ0FBQ1osa0JBQWtCLENBQUNJLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQ00sTUFBTSxDQUFDRyxVQUFVLElBQUlGLEtBQUssS0FBS1YsUUFBUSxJQUFJUyxNQUFNLENBQUNJLElBQUksS0FBSyxLQUFLLENBQUMsSUFBSWpCLDJEQUFnQixDQUFDSyxZQUFZLEVBQUU7UUFBQ1EsTUFBTSxDQUFDSyxLQUFLO1FBQUVKLEtBQUs7TUFBQyxDQUFDLENBQUM7QUFDeEwsQ0FBQztBQUkyQiIsInNvdXJjZXMiOlsiL1VzZXJzL2ppbnRhZWsvRG9jdW1lbnRzL3Byb2plY3QvZXJwL2Zyb250L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbW9kZXJuL2Vycm9yQm91bmRhcnlVdGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuLy8gc3JjL2Vycm9yQm91bmRhcnlVdGlscy50c1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBzaG91bGRUaHJvd0Vycm9yIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbnZhciBlbnN1cmVQcmV2ZW50RXJyb3JCb3VuZGFyeVJldHJ5ID0gKG9wdGlvbnMsIGVycm9yUmVzZXRCb3VuZGFyeSkgPT4ge1xuICBpZiAob3B0aW9ucy5zdXNwZW5zZSB8fCBvcHRpb25zLnRocm93T25FcnJvciB8fCBvcHRpb25zLmV4cGVyaW1lbnRhbF9wcmVmZXRjaEluUmVuZGVyKSB7XG4gICAgaWYgKCFlcnJvclJlc2V0Qm91bmRhcnkuaXNSZXNldCgpKSB7XG4gICAgICBvcHRpb25zLnJldHJ5T25Nb3VudCA9IGZhbHNlO1xuICAgIH1cbiAgfVxufTtcbnZhciB1c2VDbGVhclJlc2V0RXJyb3JCb3VuZGFyeSA9IChlcnJvclJlc2V0Qm91bmRhcnkpID0+IHtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBlcnJvclJlc2V0Qm91bmRhcnkuY2xlYXJSZXNldCgpO1xuICB9LCBbZXJyb3JSZXNldEJvdW5kYXJ5XSk7XG59O1xudmFyIGdldEhhc0Vycm9yID0gKHtcbiAgcmVzdWx0LFxuICBlcnJvclJlc2V0Qm91bmRhcnksXG4gIHRocm93T25FcnJvcixcbiAgcXVlcnksXG4gIHN1c3BlbnNlXG59KSA9PiB7XG4gIHJldHVybiByZXN1bHQuaXNFcnJvciAmJiAhZXJyb3JSZXNldEJvdW5kYXJ5LmlzUmVzZXQoKSAmJiAhcmVzdWx0LmlzRmV0Y2hpbmcgJiYgcXVlcnkgJiYgKHN1c3BlbnNlICYmIHJlc3VsdC5kYXRhID09PSB2b2lkIDAgfHwgc2hvdWxkVGhyb3dFcnJvcih0aHJvd09uRXJyb3IsIFtyZXN1bHQuZXJyb3IsIHF1ZXJ5XSkpO1xufTtcbmV4cG9ydCB7XG4gIGVuc3VyZVByZXZlbnRFcnJvckJvdW5kYXJ5UmV0cnksXG4gIGdldEhhc0Vycm9yLFxuICB1c2VDbGVhclJlc2V0RXJyb3JCb3VuZGFyeVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yQm91bmRhcnlVdGlscy5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJzaG91bGRUaHJvd0Vycm9yIiwiZW5zdXJlUHJldmVudEVycm9yQm91bmRhcnlSZXRyeSIsIm9wdGlvbnMiLCJlcnJvclJlc2V0Qm91bmRhcnkiLCJzdXNwZW5zZSIsInRocm93T25FcnJvciIsImV4cGVyaW1lbnRhbF9wcmVmZXRjaEluUmVuZGVyIiwiaXNSZXNldCIsInJldHJ5T25Nb3VudCIsInVzZUNsZWFyUmVzZXRFcnJvckJvdW5kYXJ5IiwidXNlRWZmZWN0IiwiY2xlYXJSZXNldCIsImdldEhhc0Vycm9yIiwicmVzdWx0IiwicXVlcnkiLCJpc0Vycm9yIiwiaXNGZXRjaGluZyIsImRhdGEiLCJlcnJvciJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/isRestoring.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/isRestoring.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IsRestoringProvider: () => (/* binding */ IsRestoringProvider),\n/* harmony export */   useIsRestoring: () => (/* binding */ useIsRestoring)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* __next_internal_client_entry_do_not_use__ IsRestoringProvider,useIsRestoring auto */ // src/isRestoring.ts\n\nvar IsRestoringContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(false);\nvar useIsRestoring = ()=>react__WEBPACK_IMPORTED_MODULE_0__.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9pc1Jlc3RvcmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7d0ZBRUE7QUFDOEI7QUFDOUIsSUFBSUMsa0JBQWtCLGlCQUFHRCxnREFBbUIsQ0FBQyxLQUFLLENBQUM7QUFDbkQsSUFBSUcsY0FBYyxHQUFHQSxDQUFBLEdBQU1ILDZDQUFnQixDQUFDQyxrQkFBa0IsQ0FBQztBQUMvRCxJQUFJSSxtQkFBbUIsR0FBR0osa0JBQWtCLENBQUNLLFFBQVE7QUFHckMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaW50YWVrL0RvY3VtZW50cy9wcm9qZWN0L2VycC9mcm9udC9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9pc1Jlc3RvcmluZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuLy8gc3JjL2lzUmVzdG9yaW5nLnRzXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbnZhciBJc1Jlc3RvcmluZ0NvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGZhbHNlKTtcbnZhciB1c2VJc1Jlc3RvcmluZyA9ICgpID0+IFJlYWN0LnVzZUNvbnRleHQoSXNSZXN0b3JpbmdDb250ZXh0KTtcbnZhciBJc1Jlc3RvcmluZ1Byb3ZpZGVyID0gSXNSZXN0b3JpbmdDb250ZXh0LlByb3ZpZGVyO1xuZXhwb3J0IHtcbiAgSXNSZXN0b3JpbmdQcm92aWRlcixcbiAgdXNlSXNSZXN0b3Jpbmdcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc1Jlc3RvcmluZy5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJJc1Jlc3RvcmluZ0NvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwidXNlSXNSZXN0b3JpbmciLCJ1c2VDb250ZXh0IiwiSXNSZXN0b3JpbmdQcm92aWRlciIsIlByb3ZpZGVyIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/isRestoring.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/suspense.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/suspense.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultThrowOnError: () => (/* binding */ defaultThrowOnError),\n/* harmony export */   ensureSuspenseTimers: () => (/* binding */ ensureSuspenseTimers),\n/* harmony export */   fetchOptimistic: () => (/* binding */ fetchOptimistic),\n/* harmony export */   shouldSuspend: () => (/* binding */ shouldSuspend),\n/* harmony export */   willFetch: () => (/* binding */ willFetch)\n/* harmony export */ });\n// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = defaultedOptions => {\n  const originalStaleTime = defaultedOptions.staleTime;\n  if (defaultedOptions.suspense) {\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => Math.max(originalStaleTime(...args), 1e3) : Math.max(originalStaleTime ?? 1e3, 1e3);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9zdXNwZW5zZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0EsSUFBSUEsbUJBQW1CLEdBQUdBLENBQUNDLE1BQU0sRUFBRUMsS0FBSyxLQUFLQSxLQUFLLENBQUNDLEtBQUssQ0FBQ0MsSUFBSSxLQUFLLEtBQUssQ0FBQztBQUN4RSxJQUFJQyxvQkFBb0IsR0FBSUMsZ0JBQWdCLElBQUs7RUFDL0MsTUFBTUMsaUJBQWlCLEdBQUdELGdCQUFnQixDQUFDRSxTQUFTO0VBQ3BELElBQUlGLGdCQUFnQixDQUFDRyxRQUFRLEVBQUU7SUFDN0JILGdCQUFnQixDQUFDRSxTQUFTLEdBQUcsT0FBT0QsaUJBQWlCLEtBQUssVUFBVSxHQUFHLENBQUMsR0FBR0csSUFBSSxLQUFLQyxJQUFJLENBQUNDLEdBQUcsQ0FBQ0wsaUJBQWlCLENBQUMsR0FBR0csSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLEdBQUdDLElBQUksQ0FBQ0MsR0FBRyxDQUFDTCxpQkFBaUIsSUFBSSxHQUFHLEVBQUUsR0FBRyxDQUFDO0lBQ3ZLLElBQUksT0FBT0QsZ0JBQWdCLENBQUNPLE1BQU0sS0FBSyxRQUFRLEVBQUU7TUFDL0NQLGdCQUFnQixDQUFDTyxNQUFNLEdBQUdGLElBQUksQ0FBQ0MsR0FBRyxDQUFDTixnQkFBZ0IsQ0FBQ08sTUFBTSxFQUFFLEdBQUcsQ0FBQztJQUNsRTtFQUNGO0FBQ0YsQ0FBQztBQUNELElBQUlDLFNBQVMsR0FBR0EsQ0FBQ0MsTUFBTSxFQUFFQyxXQUFXLEtBQUtELE1BQU0sQ0FBQ0UsU0FBUyxJQUFJRixNQUFNLENBQUNHLFVBQVUsSUFBSSxDQUFDRixXQUFXO0FBQzlGLElBQUlHLGFBQWEsR0FBR0EsQ0FBQ2IsZ0JBQWdCLEVBQUVTLE1BQU0sS0FBS1QsZ0JBQWdCLEVBQUVHLFFBQVEsSUFBSU0sTUFBTSxDQUFDSyxTQUFTO0FBQ2hHLElBQUlDLGVBQWUsR0FBR0EsQ0FBQ2YsZ0JBQWdCLEVBQUVnQixRQUFRLEVBQUVDLGtCQUFrQixLQUFLRCxRQUFRLENBQUNELGVBQWUsQ0FBQ2YsZ0JBQWdCLENBQUMsQ0FBQ2tCLEtBQUssQ0FBQyxNQUFNO0VBQy9IRCxrQkFBa0IsQ0FBQ0UsVUFBVSxDQUFDLENBQUM7QUFDakMsQ0FBQyxDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvamludGFlay9Eb2N1bWVudHMvcHJvamVjdC9lcnAvZnJvbnQvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vc3VzcGVuc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3N1c3BlbnNlLnRzXG52YXIgZGVmYXVsdFRocm93T25FcnJvciA9IChfZXJyb3IsIHF1ZXJ5KSA9PiBxdWVyeS5zdGF0ZS5kYXRhID09PSB2b2lkIDA7XG52YXIgZW5zdXJlU3VzcGVuc2VUaW1lcnMgPSAoZGVmYXVsdGVkT3B0aW9ucykgPT4ge1xuICBjb25zdCBvcmlnaW5hbFN0YWxlVGltZSA9IGRlZmF1bHRlZE9wdGlvbnMuc3RhbGVUaW1lO1xuICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5zdXNwZW5zZSkge1xuICAgIGRlZmF1bHRlZE9wdGlvbnMuc3RhbGVUaW1lID0gdHlwZW9mIG9yaWdpbmFsU3RhbGVUaW1lID09PSBcImZ1bmN0aW9uXCIgPyAoLi4uYXJncykgPT4gTWF0aC5tYXgob3JpZ2luYWxTdGFsZVRpbWUoLi4uYXJncyksIDFlMykgOiBNYXRoLm1heChvcmlnaW5hbFN0YWxlVGltZSA/PyAxZTMsIDFlMyk7XG4gICAgaWYgKHR5cGVvZiBkZWZhdWx0ZWRPcHRpb25zLmdjVGltZSA9PT0gXCJudW1iZXJcIikge1xuICAgICAgZGVmYXVsdGVkT3B0aW9ucy5nY1RpbWUgPSBNYXRoLm1heChkZWZhdWx0ZWRPcHRpb25zLmdjVGltZSwgMWUzKTtcbiAgICB9XG4gIH1cbn07XG52YXIgd2lsbEZldGNoID0gKHJlc3VsdCwgaXNSZXN0b3JpbmcpID0+IHJlc3VsdC5pc0xvYWRpbmcgJiYgcmVzdWx0LmlzRmV0Y2hpbmcgJiYgIWlzUmVzdG9yaW5nO1xudmFyIHNob3VsZFN1c3BlbmQgPSAoZGVmYXVsdGVkT3B0aW9ucywgcmVzdWx0KSA9PiBkZWZhdWx0ZWRPcHRpb25zPy5zdXNwZW5zZSAmJiByZXN1bHQuaXNQZW5kaW5nO1xudmFyIGZldGNoT3B0aW1pc3RpYyA9IChkZWZhdWx0ZWRPcHRpb25zLCBvYnNlcnZlciwgZXJyb3JSZXNldEJvdW5kYXJ5KSA9PiBvYnNlcnZlci5mZXRjaE9wdGltaXN0aWMoZGVmYXVsdGVkT3B0aW9ucykuY2F0Y2goKCkgPT4ge1xuICBlcnJvclJlc2V0Qm91bmRhcnkuY2xlYXJSZXNldCgpO1xufSk7XG5leHBvcnQge1xuICBkZWZhdWx0VGhyb3dPbkVycm9yLFxuICBlbnN1cmVTdXNwZW5zZVRpbWVycyxcbiAgZmV0Y2hPcHRpbWlzdGljLFxuICBzaG91bGRTdXNwZW5kLFxuICB3aWxsRmV0Y2hcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdXNwZW5zZS5qcy5tYXAiXSwibmFtZXMiOlsiZGVmYXVsdFRocm93T25FcnJvciIsIl9lcnJvciIsInF1ZXJ5Iiwic3RhdGUiLCJkYXRhIiwiZW5zdXJlU3VzcGVuc2VUaW1lcnMiLCJkZWZhdWx0ZWRPcHRpb25zIiwib3JpZ2luYWxTdGFsZVRpbWUiLCJzdGFsZVRpbWUiLCJzdXNwZW5zZSIsImFyZ3MiLCJNYXRoIiwibWF4IiwiZ2NUaW1lIiwid2lsbEZldGNoIiwicmVzdWx0IiwiaXNSZXN0b3JpbmciLCJpc0xvYWRpbmciLCJpc0ZldGNoaW5nIiwic2hvdWxkU3VzcGVuZCIsImlzUGVuZGluZyIsImZldGNoT3B0aW1pc3RpYyIsIm9ic2VydmVyIiwiZXJyb3JSZXNldEJvdW5kYXJ5IiwiY2F0Y2giLCJjbGVhclJlc2V0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/suspense.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/useBaseQuery.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/useBaseQuery.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useBaseQuery: () => (/* binding */ useBaseQuery)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _QueryClientProvider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QueryClientProvider.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n/* harmony import */ var _QueryErrorResetBoundary_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./QueryErrorResetBoundary.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js\");\n/* harmony import */ var _errorBoundaryUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errorBoundaryUtils.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js\");\n/* harmony import */ var _isRestoring_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isRestoring.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/isRestoring.js\");\n/* harmony import */ var _suspense_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./suspense.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/suspense.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/utils.js\");\n/* __next_internal_client_entry_do_not_use__ useBaseQuery auto */ // src/useBaseQuery.ts\n\n\n\n\n\n\n\n\nfunction useBaseQuery(options, Observer, queryClient) {\n    if (true) {\n        if (typeof options !== \"object\" || Array.isArray(options)) {\n            throw new Error('Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object');\n        }\n    }\n    const client = (0,_QueryClientProvider_js__WEBPACK_IMPORTED_MODULE_1__.useQueryClient)(queryClient);\n    const isRestoring = (0,_isRestoring_js__WEBPACK_IMPORTED_MODULE_2__.useIsRestoring)();\n    const errorResetBoundary = (0,_QueryErrorResetBoundary_js__WEBPACK_IMPORTED_MODULE_3__.useQueryErrorResetBoundary)();\n    const defaultedOptions = client.defaultQueryOptions(options);\n    client.getDefaultOptions().queries?._experimental_beforeQuery?.(defaultedOptions);\n    defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n    (0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.ensureSuspenseTimers)(defaultedOptions);\n    (0,_errorBoundaryUtils_js__WEBPACK_IMPORTED_MODULE_5__.ensurePreventErrorBoundaryRetry)(defaultedOptions, errorResetBoundary);\n    (0,_errorBoundaryUtils_js__WEBPACK_IMPORTED_MODULE_5__.useClearResetErrorBoundary)(errorResetBoundary);\n    const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n    const [observer] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n        \"useBaseQuery.useState\": ()=>new Observer(client, defaultedOptions)\n    }[\"useBaseQuery.useState\"]);\n    const result = observer.getOptimisticResult(defaultedOptions);\n    const shouldSubscribe = !isRestoring && options.subscribed !== false;\n    react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore(react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"useBaseQuery.useSyncExternalStore.useCallback\": (onStoreChange)=>{\n            const unsubscribe = shouldSubscribe ? observer.subscribe(_tanstack_query_core__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batchCalls(onStoreChange)) : _utils_js__WEBPACK_IMPORTED_MODULE_7__.noop;\n            observer.updateResult();\n            return unsubscribe;\n        }\n    }[\"useBaseQuery.useSyncExternalStore.useCallback\"], [\n        observer,\n        shouldSubscribe\n    ]), {\n        \"useBaseQuery.useSyncExternalStore\": ()=>observer.getCurrentResult()\n    }[\"useBaseQuery.useSyncExternalStore\"], {\n        \"useBaseQuery.useSyncExternalStore\": ()=>observer.getCurrentResult()\n    }[\"useBaseQuery.useSyncExternalStore\"]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"useBaseQuery.useEffect\": ()=>{\n            observer.setOptions(defaultedOptions, {\n                listeners: false\n            });\n        }\n    }[\"useBaseQuery.useEffect\"], [\n        defaultedOptions,\n        observer\n    ]);\n    if ((0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.shouldSuspend)(defaultedOptions, result)) {\n        throw (0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary);\n    }\n    if ((0,_errorBoundaryUtils_js__WEBPACK_IMPORTED_MODULE_5__.getHasError)({\n        result,\n        errorResetBoundary,\n        throwOnError: defaultedOptions.throwOnError,\n        query: client.getQueryCache().get(defaultedOptions.queryHash),\n        suspense: defaultedOptions.suspense\n    })) {\n        throw result.error;\n    }\n    ;\n    client.getDefaultOptions().queries?._experimental_afterQuery?.(defaultedOptions, result);\n    if (defaultedOptions.experimental_prefetchInRender && !_tanstack_query_core__WEBPACK_IMPORTED_MODULE_8__.isServer && (0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.willFetch)(result, isRestoring)) {\n        const promise = isNewCacheEntry ? // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n        (0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary) : // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n        client.getQueryCache().get(defaultedOptions.queryHash)?.promise;\n        promise?.catch(_utils_js__WEBPACK_IMPORTED_MODULE_7__.noop).finally(()=>{\n            observer.updateResult();\n        });\n    }\n    return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/useBaseQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useInfiniteQuery: () => (/* binding */ useInfiniteQuery)\n/* harmony export */ });\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js\");\n/* harmony import */ var _useBaseQuery_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useBaseQuery.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/useBaseQuery.js\");\n/* __next_internal_client_entry_do_not_use__ useInfiniteQuery auto */ // src/useInfiniteQuery.ts\n\n\nfunction useInfiniteQuery(options, queryClient) {\n    return (0,_useBaseQuery_js__WEBPACK_IMPORTED_MODULE_0__.useBaseQuery)(options, _tanstack_query_core__WEBPACK_IMPORTED_MODULE_1__.InfiniteQueryObserver, queryClient);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi91c2VJbmZpbml0ZVF1ZXJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztzRUFFQTtBQUM0RDtBQUNaO0FBQ2hELFNBQVNFLGdCQUFnQkEsQ0FBQ0MsT0FBTyxFQUFFQyxXQUFXLEVBQUU7SUFDOUMsT0FBT0gsOERBQVksQ0FDakJFLE9BQU8sRUFDUEgsdUVBQXFCLEVBQ3JCSSxXQUNGLENBQUM7QUFDSDtBQUVrQiIsInNvdXJjZXMiOlsiL1VzZXJzL2ppbnRhZWsvRG9jdW1lbnRzL3Byb2plY3QvZXJwL2Zyb250L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbW9kZXJuL3VzZUluZmluaXRlUXVlcnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbi8vIHNyYy91c2VJbmZpbml0ZVF1ZXJ5LnRzXG5pbXBvcnQgeyBJbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIgfSBmcm9tIFwiQHRhbnN0YWNrL3F1ZXJ5LWNvcmVcIjtcbmltcG9ydCB7IHVzZUJhc2VRdWVyeSB9IGZyb20gXCIuL3VzZUJhc2VRdWVyeS5qc1wiO1xuZnVuY3Rpb24gdXNlSW5maW5pdGVRdWVyeShvcHRpb25zLCBxdWVyeUNsaWVudCkge1xuICByZXR1cm4gdXNlQmFzZVF1ZXJ5KFxuICAgIG9wdGlvbnMsXG4gICAgSW5maW5pdGVRdWVyeU9ic2VydmVyLFxuICAgIHF1ZXJ5Q2xpZW50XG4gICk7XG59XG5leHBvcnQge1xuICB1c2VJbmZpbml0ZVF1ZXJ5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlSW5maW5pdGVRdWVyeS5qcy5tYXAiXSwibmFtZXMiOlsiSW5maW5pdGVRdWVyeU9ic2VydmVyIiwidXNlQmFzZVF1ZXJ5IiwidXNlSW5maW5pdGVRdWVyeSIsIm9wdGlvbnMiLCJxdWVyeUNsaWVudCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   shouldThrowError: () => (/* binding */ shouldThrowError)\n/* harmony export */ });\n// src/utils.ts\nfunction shouldThrowError(throwError, params) {\n  if (typeof throwError === \"function\") {\n    return throwError(...params);\n  }\n  return !!throwError;\n}\nfunction noop() {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsU0FBU0EsZ0JBQWdCQSxDQUFDQyxVQUFVLEVBQUVDLE1BQU0sRUFBRTtFQUM1QyxJQUFJLE9BQU9ELFVBQVUsS0FBSyxVQUFVLEVBQUU7SUFDcEMsT0FBT0EsVUFBVSxDQUFDLEdBQUdDLE1BQU0sQ0FBQztFQUM5QjtFQUNBLE9BQU8sQ0FBQyxDQUFDRCxVQUFVO0FBQ3JCO0FBQ0EsU0FBU0UsSUFBSUEsQ0FBQSxFQUFHLENBQ2hCIiwic291cmNlcyI6WyIvVXNlcnMvamludGFlay9Eb2N1bWVudHMvcHJvamVjdC9lcnAvZnJvbnQvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzLnRzXG5mdW5jdGlvbiBzaG91bGRUaHJvd0Vycm9yKHRocm93RXJyb3IsIHBhcmFtcykge1xuICBpZiAodHlwZW9mIHRocm93RXJyb3IgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJldHVybiB0aHJvd0Vycm9yKC4uLnBhcmFtcyk7XG4gIH1cbiAgcmV0dXJuICEhdGhyb3dFcnJvcjtcbn1cbmZ1bmN0aW9uIG5vb3AoKSB7XG59XG5leHBvcnQge1xuICBub29wLFxuICBzaG91bGRUaHJvd0Vycm9yXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbInNob3VsZFRocm93RXJyb3IiLCJ0aHJvd0Vycm9yIiwicGFyYW1zIiwibm9vcCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/utils.js\n");

/***/ })

};
;